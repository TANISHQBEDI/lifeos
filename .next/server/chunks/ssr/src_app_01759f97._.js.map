{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/tanishqbedi/Documents/Projects/kageyama/lifeos/src/app/dashboard/page.tsx"],"sourcesContent":["// src/app/dashboard/page.tsx\n'use client';\n\nimport React, { useMemo, useEffect, useState, useCallback } from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from \"@/components/ui/card\";\nimport { FileText, Target, Activity, CreditCard, Bot, Clock3, ListChecks, Users as UsersIcon, RefreshCw } from \"lucide-react\";\nimport { StudyHeatmap } from \"@/components/dashboard/study-heatmap\";\nimport { TimeDistributionChart } from \"@/components/dashboard/time-distribution-chart\";\nimport { RecentActivityList, type ActivityItem } from \"@/components/dashboard/recent-activity-list\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { DashboardLayout, type DashboardWidgetConfig } from '@/components/dashboard/dashboard-layout';\nimport { DailyProgressSummary } from '@/components/dashboard/daily-progress-summary';\nimport { useAuth } from '@/hooks/use-auth';\nimport { Task, TimerSession, Goal, HabitLog, Deck, Note } from '@/types';\nimport { formatDistanceToNow, parseISO, isValid, isSameDay, startOfDay, format } from 'date-fns';\nimport { Loader2 } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { useToast } from '@/hooks/use-toast';\nimport { loadUserData } from '@/lib/local-storage'; // Still used for app data\nimport { useRouter } from 'next/navigation'; // Import useRouter for prefetching\n\n// --- Suffix Constants for localStorage application data ---\nconst TASKS_SUFFIX = 'tasks';\nconst SESSIONS_SUFFIX = 'timerSessions';\nconst GOALS_SUFFIX = 'goals';\nconst LOGS_SUFFIX = 'habitLogs';\nconst DECKS_SUFFIX = 'flashcardDecks';\nconst NOTES_SUFFIX = 'notes';\n\nconst AdminDataView = () => {\n    const { isAdmin, getAllUsers, loading: authLoading } = useAuth();\n    const [userCount, setUserCount] = useState<number | null>(null);\n    const [adminDataLoading, setAdminDataLoading] = useState(false);\n    const [adminError, setAdminError] = useState<string | null>(null);\n    const { toast } = useToast();\n\n    const fetchAdminData = useCallback(async () => {\n        if (!isAdmin || !getAllUsers) {\n            setUserCount(null);\n            return;\n        }\n        setAdminDataLoading(true);\n        setAdminError(null);\n        try {\n            const usersList = await getAllUsers(); // Fetches from API\n            if (usersList) {\n                setUserCount(usersList.length);\n            } else {\n                setUserCount(0); // Or handle as an error\n                setAdminError(\"Could not load user list for admin.\");\n            }\n        } catch (err) {\n            console.error(\"Failed to fetch user count for admin:\", err);\n            const errorMessage = err instanceof Error ? err.message : \"Unknown error loading admin data.\";\n            setAdminError(errorMessage);\n            setUserCount(null);\n            toast({ title: \"Admin Data Error\", description: errorMessage, variant: \"destructive\" });\n        } finally {\n            setAdminDataLoading(false);\n        }\n    }, [isAdmin, getAllUsers, toast]);\n\n    useEffect(() => {\n        if (isAdmin && !authLoading) { // Fetch only if admin and auth state is resolved\n             fetchAdminData();\n        }\n    }, [isAdmin, authLoading, fetchAdminData]);\n\n    if (!isAdmin) return null;\n\n    return (\n        <Card className=\"glassmorphism col-span-1 sm:col-span-2 lg:col-span-4\">\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-lg font-medium text-primary flex items-center gap-2\">\n                    <UsersIcon className=\"w-5 h-5\" /> Admin Overview\n                </CardTitle>\n                <Button variant=\"ghost\" size=\"icon\" onClick={fetchAdminData} disabled={adminDataLoading || authLoading} className=\"h-7 w-7 text-muted-foreground hover:text-primary\">\n                    {adminDataLoading ? <Loader2 className=\"w-4 h-4 animate-spin\" /> : <RefreshCw className=\"w-4 h-4\" />}\n                </Button>\n            </CardHeader>\n            <CardContent>\n                {adminDataLoading ? (\n                    <div className=\"flex items-center text-muted-foreground\"><Loader2 className=\"w-4 h-4 mr-2 animate-spin\" /> Loading admin data...</div>\n                ) : adminError ? (\n                    <p className=\"text-sm text-destructive\">{adminError}</p>\n                ) : (\n                    <p className=\"text-sm text-muted-foreground\">Total Registered Users (MongoDB): <span className=\"font-bold text-foreground\">{userCount ?? 'N/A'}</span></p>\n                )}\n            </CardContent>\n        </Card>\n    );\n};\n\n\n// --- Widget Components (Conceptual, data passed as props) ---\nconst FocusWidget = ({ totalFocusTime = 0 }: { totalFocusTime: number }) => (\n    <>\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <CardTitle className=\"text-sm font-medium text-muted-foreground\">Today's Focus</CardTitle>\n        <Clock3 className=\"w-5 h-5 text-primary\" />\n      </CardHeader>\n      <CardContent className=\"pt-2\">\n        <div className=\"text-3xl font-bold mb-1\">\n           {Math.floor(totalFocusTime / 60)}h {totalFocusTime % 60}m\n        </div>\n        <p className=\"text-xs text-muted-foreground pt-1\">Total focus minutes logged</p>\n      </CardContent>\n    </>\n);\n\nconst FlashcardsWidget = ({ deckCount }: { deckCount: number }) => (\n    <>\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium text-muted-foreground\">Flashcard Decks</CardTitle>\n            <CreditCard className=\"w-5 h-5 text-primary\" />\n        </CardHeader>\n        <CardContent className=\"pt-2\">\n            <div className=\"text-3xl font-bold mb-1\">{deckCount}</div>\n            <p className=\"text-xs text-muted-foreground pt-1\">Total decks created/imported</p>\n        </CardContent>\n    </>\n);\n\nconst NotesWidget = ({ noteCount }: { noteCount: number }) => (\n     <>\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium text-muted-foreground\">Notes Created</CardTitle>\n            <FileText className=\"w-5 h-5 text-primary\" />\n        </CardHeader>\n        <CardContent className=\"pt-2\">\n            <div className=\"text-3xl font-bold mb-1\">{noteCount}</div>\n            <p className=\"text-xs text-muted-foreground pt-1\">Total notes and summaries</p>\n        </CardContent>\n    </>\n);\n\nconst GoalsWidget = ({ goalCount, completedGoals }: { goalCount: number, completedGoals: number }) => {\n    const progress = goalCount > 0 ? Math.round((completedGoals / goalCount) * 100) : 0;\n    return (\n        <>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium text-muted-foreground\">Goals Progress</CardTitle>\n                <Target className=\"w-5 h-5 text-primary\" />\n            </CardHeader>\n            <CardContent className=\"pt-2\">\n                <div className=\"text-3xl font-bold mb-1\">{completedGoals} / {goalCount}</div>\n                <p className=\"text-xs text-muted-foreground pt-1\">Goals completed</p>\n                <Progress value={progress} className=\"mt-3 h-2\" />\n            </CardContent>\n        </>\n    );\n};\n\nconst HeatmapWidget = ({ habitLogs }: { habitLogs: HabitLog[] }) => (\n    <>\n      <CardHeader>\n        <CardTitle className=\"text-lg font-medium text-primary flex items-center justify-between\">\n          Study/Habit Heatmap\n          <span className=\"text-sm text-muted-foreground\">Last ~5 months</span>\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n         <StudyHeatmap logs={habitLogs} />\n      </CardContent>\n    </>\n);\n\nconst TimeDistributionWidget = ({ sessions }: { sessions: TimerSession[] }) => {\n    const chartData = useMemo(() => {\n        const distribution = sessions.reduce((acc, session) => {\n            const mode = session.mode === 'pomodoro' ? 'Focus' : (session.mode === 'shortBreak' ? 'Short Break' : 'Long Break');\n            acc[mode] = (acc[mode] || 0) + session.duration;\n            return acc;\n        }, {} as Record<string, number>);\n\n        return Object.entries(distribution).map(([activity, totalSeconds]) => ({\n            activity,\n            time: Math.round(totalSeconds / 60),\n        }));\n    }, [sessions]);\n\n    return (\n      <>\n        <CardHeader>\n          <CardTitle className=\"text-lg font-medium text-primary\">Time Distribution</CardTitle>\n        </CardHeader>\n        <CardContent>\n           {chartData.length > 0 ? (\n             <TimeDistributionChart data={chartData} />\n           ) : (\n             <p className=\"text-muted-foreground text-sm\">No timer sessions recorded yet.</p>\n           )}\n        </CardContent>\n      </>\n    );\n};\n\nconst RecentActivityWidget = ({ recentActivities }: { recentActivities: ActivityItem[] }) => {\n    return (\n      <>\n        <CardHeader>\n          <CardTitle className=\"text-lg font-medium text-primary flex items-center justify-between\">\n            Recent Activity\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <RecentActivityList activities={recentActivities} />\n        </CardContent>\n      </>\n    );\n};\n\nconst ProgressSummaryWidget = () => <DailyProgressSummary />;\n\n\nexport default function DashboardPage() {\n  const { userId, loading: authLoading, isAdmin } = useAuth(); // isAdmin from useAuth\n  const router = useRouter(); // Initialize useRouter for prefetching\n  const [dashboardData, setDashboardData] = useState<{\n      tasks: Task[];\n      sessions: TimerSession[];\n      goals: Goal[];\n      habitLogs: HabitLog[];\n      decks: Deck[];\n      notes: Note[];\n  } | null>(null);\n  const [isPageLoading, setIsPageLoading] = useState(true);\n  const [hasFetched, setHasFetched] = useState(false);\n  const { toast } = useToast();\n\n  // Parse date strings from localStorage into Date objects\n  const parseItemDates = <T extends { [key: string]: any }>(item: T, dateFields: (keyof T)[]): T => {\n    const newItem = { ...item };\n    dateFields.forEach(field => {\n        if (newItem[field] && typeof newItem[field] === 'string') {\n            const date = parseISO(newItem[field]);\n            if (isValid(date)) {\n                newItem[field] = date;\n            } else {\n                console.warn(`Invalid date string found for field ${String(field)} in item:`, item);\n                newItem[field] = new Date(); // Fallback or handle as needed\n            }\n        } else if (newItem[field] && typeof newItem[field] === 'number') { // Handle timestamp\n             const date = new Date(newItem[field]);\n             if (isValid(date)) {\n                newItem[field] = date;\n            } else {\n                newItem[field] = new Date();\n            }\n        }\n    });\n    return newItem;\n  };\n\n\n  useEffect(() => {\n    const fetchData = () => {\n        if (!authLoading && userId && !hasFetched) {\n            setIsPageLoading(true);\n            try {\n                // Application data (tasks, notes, etc.) is still loaded from localStorage\n                const loadedTasks = loadUserData<Task[]>(userId, TASKS_SUFFIX) || [];\n                const loadedSessions = loadUserData<TimerSession[]>(userId, SESSIONS_SUFFIX) || [];\n                const loadedGoals = loadUserData<Goal[]>(userId, GOALS_SUFFIX) || [];\n                const loadedHabitLogs = loadUserData<HabitLog[]>(userId, LOGS_SUFFIX) || [];\n                const loadedDecks = loadUserData<Deck[]>(userId, DECKS_SUFFIX) || [];\n                const loadedNotes = loadUserData<Note[]>(userId, NOTES_SUFFIX) || [];\n\n                setDashboardData({\n                    tasks: loadedTasks.map(t => parseItemDates(t, ['createdAt', 'updatedAt', 'dueDate', 'completedAt'])),\n                    sessions: loadedSessions.map(s => parseItemDates(s, ['startTime', 'endTime'])),\n                    goals: loadedGoals.map(g => parseItemDates(g, ['createdAt', 'updatedAt', 'targetDate'])),\n                    habitLogs: loadedHabitLogs.map(l => parseItemDates(l, ['date'])),\n                    decks: loadedDecks.map(d => parseItemDates(d, ['createdAt', 'updatedAt'])),\n                    notes: loadedNotes.map(n => parseItemDates(n, ['createdAt', 'updatedAt'])),\n                });\n                setHasFetched(true);\n\n                 // Prefetch key routes after initial data is loaded\n                router.prefetch('/materials');\n                router.prefetch('/goals');\n                router.prefetch('/tasks');\n                router.prefetch('/habits');\n                router.prefetch('/timer');\n                router.prefetch('/flashcards');\n                router.prefetch('/notes');\n                router.prefetch('/assistant');\n                console.log('Dashboard: Prefetching key routes.');\n\n\n            } catch (error) {\n                 console.error(\"Failed to load dashboard data from localStorage:\", error);\n                 toast({ title: \"Error Loading Dashboard\", description: \"Could not load data from local storage.\", variant: \"destructive\" });\n                 setDashboardData(null);\n            } finally {\n                 setIsPageLoading(false);\n            }\n        } else if (!authLoading && !userId) {\n            setDashboardData(null);\n            setHasFetched(false);\n            setIsPageLoading(false);\n        } else if (hasFetched) {\n             setIsPageLoading(false);\n        }\n    };\n    fetchData();\n  }, [userId, authLoading, hasFetched, toast, router]); // Add router to dependencies\n\n\n  const processedData = useMemo(() => {\n    if (!dashboardData) {\n        return {\n            totalFocusTimeMinutes: 0,\n            recentActivities: [],\n            completedGoals: 0,\n        };\n    }\n\n    const { tasks, sessions, goals } = dashboardData;\n    const today = startOfDay(new Date());\n\n    const todayFocusTimeSeconds = sessions\n        .filter(s => s.mode === 'pomodoro' && s.endTime && isValid(new Date(s.endTime)) && isSameDay(new Date(s.endTime), today))\n        .reduce((sum, s) => sum + s.duration, 0);\n    const totalFocusTimeMinutes = Math.round(todayFocusTimeSeconds / 60);\n\n    const taskActivities: ActivityItem[] = tasks\n        .filter(task => task.completed && task.completedAt && isValid(new Date(task.completedAt!)))\n        .map(task => ({\n            id: `task-${task.id}`,\n            iconName: 'ListChecks',\n            text: `Completed: ${task.text}`,\n            time: formatDistanceToNow(new Date(task.completedAt!), { addSuffix: true }),\n            timestamp: new Date(task.completedAt!).getTime()\n        }));\n\n    const sessionActivities: ActivityItem[] = sessions\n        .filter(session => session.endTime && isValid(new Date(session.endTime)))\n        .map(session => ({\n            id: `session-${session.id}`,\n            iconName: session.mode === 'pomodoro' ? 'Brain' : 'Coffee',\n            text: `${session.mode === 'pomodoro' ? 'Focus' : session.mode.includes('Break') ? 'Break' : session.mode} Session - ${Math.round(session.duration / 60)} min`,\n            time: formatDistanceToNow(new Date(session.endTime), { addSuffix: true }),\n            timestamp: new Date(session.endTime).getTime()\n    }));\n\n    const combinedActivities = [...taskActivities, ...sessionActivities]\n        .sort((a, b) => b.timestamp - a.timestamp)\n        .slice(0, 7);\n\n    const completedGoals = goals.filter(g => {\n         const goalTasks = tasks.filter(t => t.goalId === g.id);\n         return goalTasks.length > 0 && goalTasks.every(t => t.completed);\n    }).length;\n\n    return {\n        totalFocusTimeMinutes,\n        recentActivities: combinedActivities,\n        completedGoals,\n    };\n  }, [dashboardData]);\n\n\n  const widgetsConfig: DashboardWidgetConfig[] = useMemo(() => {\n      const data = dashboardData || { tasks: [], sessions: [], goals: [], habitLogs: [], decks: [], notes: [] };\n      const derived = processedData;\n\n      return [\n        { id: 'progressSummary', component: ProgressSummaryWidget, title: \"Today's Progress Summary\", colSpan: 4 },\n        { id: 'focus', component: () => <FocusWidget totalFocusTime={derived.totalFocusTimeMinutes} />, title: \"Today's Focus\", colSpan: 1 },\n        { id: 'flashcards', component: () => <FlashcardsWidget deckCount={data.decks.length} />, title: \"Flashcard Decks\", colSpan: 1 },\n        { id: 'notes', component: () => <NotesWidget noteCount={data.notes.length} />, title: \"Notes Created\", colSpan: 1 },\n        { id: 'goals', component: () => <GoalsWidget goalCount={data.goals.length} completedGoals={derived.completedGoals} />, title: \"Goals Progress\", colSpan: 1 },\n        { id: 'heatmap', component: () => <HeatmapWidget habitLogs={data.habitLogs} />, title: \"Study/Habit Heatmap\", colSpan: 2 },\n        { id: 'timeDistribution', component: () => <TimeDistributionWidget sessions={data.sessions} />, title: \"Time Distribution\", colSpan: 2 },\n        { id: 'recentActivity', component: () => <RecentActivityWidget recentActivities={derived.recentActivities} />, title: \"Recent Activity\", colSpan: 4 },\n      ];\n  }, [dashboardData, processedData]);\n\n\n   if (authLoading || isPageLoading) {\n        return (\n           <div className=\"flex justify-center items-center h-[calc(100vh-10rem)]\">\n               <Loader2 className=\"w-8 h-8 animate-spin text-primary\" />\n               <span className=\"ml-2 text-muted-foreground\">Loading Dashboard...</span>\n           </div>\n        );\n   }\n\n   if (!userId && !authLoading) {\n        return <div className=\"text-muted-foreground p-4 text-center\">Please log in to view the dashboard.</div>;\n   }\n\n  return (\n    <div className=\"panel-slide-fade-in space-y-8\">\n      <h1 className=\"text-3xl font-bold text-primary\">Dashboard</h1>\n       {isAdmin && <AdminDataView />} {/* Render AdminDataView if user is admin */}\n      <DashboardLayout\n        initialWidgets={widgetsConfig}\n        // storageKey for dnd-kit order can still use userId for localStorage, or be removed if order not persisted locally\n        storageKey={`dashboardLayout_${userId || 'guest'}`} \n        className=\"grid-cols-1 sm:grid-cols-2 lg:grid-cols-4\"\n      />\n    </div>\n  );\n}\n\n\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 922, "column": 0}, "map": {"version":3,"sources":["file:///Users/tanishqbedi/Documents/Projects/kageyama/lifeos/src/app/materials/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect, ChangeEvent, useCallback, useRef, memo, KeyboardEvent } from 'react';\n// import { useAuth } from '@/hooks/use-auth'; // Already imported below\nimport { Card, CardHeader, CardTitle, CardContent, CardFooter } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Upload, Trash2, FileText, Loader2, AlertCircle, Tag, X as XIcon } from 'lucide-react';\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport type { StudyMaterial } from '@/types';\nimport { Badge } from \"@/components/ui/badge\";\nimport { cn } from '@/lib/utils';\nimport { format, parseISO, isValid } from 'date-fns'; // Added parseISO, isValid\nimport { useAuth } from '@/hooks/use-auth';\nimport { loadUserData, saveUserData } from '@/lib/local-storage';\n\nconst MATERIALS_SUFFIX = 'materials';\n\nconst MAX_FILE_SIZE_MB = 10;\nconst MAX_FILE_SIZE_BYTES = MAX_FILE_SIZE_MB * 1024 * 1024;\n\nconst MaterialItem = memo(({ material, onDelete }: { material: StudyMaterial, onDelete: (id: string, name: string) => void }) => {\n    const uploadDate = material.uploadDate && isValid(new Date(material.uploadDate)) ? new Date(material.uploadDate) : new Date();\n    return (\n        <div\n            className=\"flex items-start sm:items-center justify-between p-4 bg-secondary/50 rounded-lg hover:bg-secondary transition-colors flex-col sm:flex-row gap-3\"\n        >\n            <div className=\"flex items-start gap-3 overflow-hidden w-full sm:w-auto\">\n                <FileText className=\"w-6 h-6 text-primary flex-shrink-0 mt-1\" />\n                <div className=\"flex flex-col overflow-hidden\">\n                    <span className=\"font-medium truncate text-secondary-foreground\">{material.name}</span>\n                    <span className=\"text-xs text-muted-foreground\">Uploaded: {format(uploadDate, 'PP')}</span>\n                    {material.tags && material.tags.length > 0 && (\n                        <div className=\"flex flex-wrap gap-1 mt-2\">\n                            {material.tags.map(tag => (\n                                <Badge key={tag} variant=\"outline\" className=\"text-xs\">\n                                    {tag}\n                                </Badge>\n                            ))}\n                        </div>\n                    )}\n                </div>\n            </div>\n            <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                className=\"text-destructive hover:text-destructive-foreground hover:bg-destructive hover-glow flex-shrink-0 mt-2 sm:mt-0 ml-auto sm:ml-0\"\n                onClick={() => onDelete(material.id, material.name)}\n                aria-label={`Delete ${material.name}`}\n            >\n                <Trash2 className=\"w-4 h-4\" />\n            </Button>\n        </div>\n    );\n});\nMaterialItem.displayName = 'MaterialItem';\n\nexport default function MaterialsPage() {\n  const { userId, loading: authLoading } = useAuth();\n  const [materials, setMaterials] = useState<StudyMaterial[]>([]);\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [tags, setTags] = useState<string[]>([]);\n  const [tagInput, setTagInput] = useState('');\n  const [isPageLoading, setIsPageLoading] = useState(true);\n  const [isUploading, setIsUploading] = useState(false);\n  const [hasFetched, setHasFetched] = useState(false);\n  const { toast } = useToast();\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n     const fetchMaterials = () => {\n         if (!authLoading && userId && !hasFetched) {\n            setIsPageLoading(true);\n            try {\n                const loadedMaterials = loadUserData<StudyMaterial[]>(userId, MATERIALS_SUFFIX) || [];\n                const materialsWithDates = loadedMaterials.map(m => ({\n                    ...m,\n                    uploadDate: m.uploadDate && isValid(parseISO(m.uploadDate)) ? parseISO(m.uploadDate) : new Date()\n                }));\n                setMaterials(materialsWithDates.sort((a, b) => new Date(b.uploadDate).getTime() - new Date(a.uploadDate).getTime()));\n                setHasFetched(true);\n            } catch (error) {\n                console.error(\"Error loading materials from localStorage:\", error);\n                toast({ title: \"Error Loading Materials\", description: \"Could not fetch your study materials.\", variant: \"destructive\" });\n            } finally {\n                setIsPageLoading(false);\n            }\n         } else if (!authLoading && !userId) {\n             setMaterials([]);\n             setHasFetched(false);\n             setIsPageLoading(false);\n         } else if (hasFetched) {\n              setIsPageLoading(false);\n         }\n     };\n     fetchMaterials();\n  }, [userId, authLoading, hasFetched, toast]);\n\n  const saveMaterialsToStorage = useCallback((updatedMaterials: StudyMaterial[]) => {\n        if (!userId) return;\n        // Convert Date objects to ISO strings before saving\n        const materialsToSave = updatedMaterials.map(m => ({\n            ...m,\n            uploadDate: new Date(m.uploadDate).toISOString()\n        }));\n        saveUserData(userId, MATERIALS_SUFFIX, materialsToSave);\n        // Update state with Date objects for display\n        setMaterials(updatedMaterials.sort((a, b) => new Date(b.uploadDate).getTime() - new Date(a.uploadDate).getTime()));\n   }, [userId]);\n\n\n  const handleFileChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n        if (file.type !== 'application/pdf') {\n            toast({ title: \"Invalid File Type\", description: \"Please select a PDF file.\", variant: \"destructive\" });\n            setSelectedFile(null);\n            if(fileInputRef.current) fileInputRef.current.value = '';\n            return;\n        }\n         if (file.size > MAX_FILE_SIZE_BYTES) {\n             toast({ title: \"File Too Large\", description: `Please select a PDF file smaller than ${MAX_FILE_SIZE_MB}MB.`, variant: \"destructive\" });\n             setSelectedFile(null);\n             if(fileInputRef.current) fileInputRef.current.value = '';\n             return;\n         }\n      setSelectedFile(file);\n    } else {\n        setSelectedFile(null);\n    }\n  }, [toast]);\n\n  const handleTagInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n      setTagInput(e.target.value);\n  };\n\n  const handleTagInputKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter' || e.key === ',') {\n          e.preventDefault();\n          const newTag = tagInput.trim().toLowerCase();\n          if (newTag && !tags.includes(newTag) && tags.length < 5) { // Limit number of tags\n              setTags([...tags, newTag]);\n          } else if (tags.length >= 5) {\n              toast({title: \"Tag Limit Reached\", description: \"You can add up to 5 tags.\", variant: \"default\"});\n          }\n          setTagInput('');\n      } else if (e.key === 'Backspace' && !tagInput && tags.length > 0) {\n          setTags(tags.slice(0, -1));\n      }\n  };\n\n  const removeTag = (tagToRemove: string) => {\n      setTags(tags.filter(tag => tag !== tagToRemove));\n  };\n\n  const handleUpload = useCallback(() => {\n    if (!selectedFile || isUploading || !userId) return;\n\n    setIsUploading(true);\n    const reader = new FileReader();\n    reader.readAsDataURL(selectedFile);\n\n    reader.onload = () => {\n        try {\n            const newMaterial: StudyMaterial = {\n                id: `mat_${Date.now()}_${Math.random().toString(16).slice(2)}`,\n                name: selectedFile.name,\n                dataUri: reader.result as string,\n                fileType: selectedFile.type,\n                fileSize: selectedFile.size,\n                uploadDate: new Date(), // Use Date object here\n                tags: tags.map(t => t.toLowerCase()),\n                userId: userId,\n                isImported: false,\n            };\n\n            const updatedMaterials = [newMaterial, ...materials];\n            saveMaterialsToStorage(updatedMaterials);\n\n            toast({\n              title: \"Upload Successful\",\n              description: `${selectedFile.name} added.`,\n            });\n            setSelectedFile(null);\n            setTags([]);\n            setTagInput('');\n            if(fileInputRef.current) fileInputRef.current.value = '';\n        } catch (error: any) {\n             console.error(\"Error processing or saving file:\", error);\n             toast({ title: \"Upload Failed\", description: `Could not save material. ${error.message || ''}`, variant: \"destructive\" });\n        } finally {\n            setIsUploading(false);\n        }\n    };\n    reader.onerror = (error) => {\n         console.error(\"Error reading file:\", error);\n         toast({ title: \"Upload Failed\", description: \"Could not read the file.\", variant: \"destructive\" });\n         setIsUploading(false);\n    }\n  }, [selectedFile, isUploading, tags, toast, userId, materials, saveMaterialsToStorage]);\n\n\n  const handleDelete = useCallback((id: string, name: string) => {\n    if (!userId) return;\n    try {\n        const updatedMaterials = materials.filter(material => material.id !== id);\n        saveMaterialsToStorage(updatedMaterials);\n        toast({ title: \"Material Deleted\", description: `${name} has been removed.` });\n    } catch (error) {\n         toast({ title: \"Delete Failed\", description: \"Could not delete material.\", variant: \"destructive\" });\n    }\n  }, [userId, materials, saveMaterialsToStorage, toast]);\n\n\n   if (authLoading || isPageLoading) {\n     return (\n       <div className=\"flex justify-center items-center h-[calc(100vh-8rem)]\">\n         <Loader2 className=\"w-8 h-8 animate-spin text-primary\" />\n         <span className=\"ml-2 text-muted-foreground\">Loading Materials...</span>\n       </div>\n     );\n   }\n\n    if (!userId) {\n        return <div className=\"text-muted-foreground p-4 text-center\">Please log in to manage materials.</div>;\n    }\n\n  return (\n    <div className=\"panel-slide-fade-in h-[calc(100vh-8rem)] flex flex-col gap-8\">\n      <h1 className=\"text-3xl font-bold text-primary\">Study Materials</h1>\n       <Alert variant=\"default\" className=\"border-primary/50 bg-primary/10\">\n           <AlertCircle className=\"h-4 w-4 text-primary\" />\n           <AlertTitle className=\"text-primary\">Storage Notice</AlertTitle>\n           <AlertDescription className=\"text-primary/90\">\n             PDF files are stored directly in your browser's localStorage. Max file size: {MAX_FILE_SIZE_MB}MB. Large files may impact performance.\n           </AlertDescription>\n       </Alert>\n      <Card className=\"glassmorphism\">\n        <CardHeader>\n          <CardTitle className=\"text-xl text-primary flex items-center gap-2\">\n            <Upload className=\"w-5 h-5\" /> Upload New PDF\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n            <div className=\"flex flex-col sm:flex-row items-center gap-4\">\n                <Input\n                    ref={fileInputRef}\n                    type=\"file\"\n                    accept=\"application/pdf\"\n                    onChange={handleFileChange}\n                    className=\"flex-1 file:text-primary file:font-medium cursor-pointer\"\n                    disabled={isUploading || isPageLoading}\n                />\n                <Button\n                    onClick={handleUpload}\n                    disabled={!selectedFile || isUploading || isPageLoading}\n                    className=\"w-full sm:w-auto hover-glow\"\n                >\n                    {isUploading ? <Loader2 className=\"w-4 h-4 animate-spin mr-2\" /> : <Upload className=\"w-4 h-4 mr-2\" />}\n                    {isUploading ? 'Processing...' : 'Upload'}\n                </Button>\n            </div>\n             <div className=\"space-y-2\">\n                <label htmlFor=\"tags-input\" className=\"text-sm font-medium text-muted-foreground flex items-center gap-1\"><Tag className=\"w-4 h-4\" /> Add Tags (Optional, up to 5)</label>\n                 <div className={cn(\n                     \"flex flex-wrap gap-2 items-center rounded-md border border-input bg-background p-2 min-h-[40px]\",\n                     (isUploading || isPageLoading) && \"opacity-50 cursor-not-allowed\"\n                 )}>\n                    {tags.map(tag => (\n                         <Badge key={tag} variant=\"secondary\" className=\"flex items-center gap-1\">\n                            {tag}\n                            <button\n                                onClick={() => removeTag(tag)}\n                                className=\"ml-1 rounded-full opacity-70 hover:opacity-100 focus:outline-none focus:ring-1 focus:ring-ring\"\n                                disabled={isUploading || isPageLoading}\n                                aria-label={`Remove tag ${tag}`}\n                            >\n                                <XIcon className=\"w-3 h-3\" />\n                            </button>\n                         </Badge>\n                     ))}\n                     <Input\n                         id=\"tags-input\"\n                         type=\"text\"\n                         placeholder=\"Type and press Enter...\"\n                         value={tagInput}\n                         onChange={handleTagInputChange}\n                         onKeyDown={handleTagInputKeyDown}\n                         className=\"flex-1 border-none shadow-none focus-visible:ring-0 h-auto p-0 bg-transparent text-sm\"\n                         disabled={isUploading || isPageLoading || tags.length >=5}\n                     />\n                </div>\n             </div>\n        </CardContent>\n         {selectedFile && !isUploading && (\n            <CardFooter className=\"text-sm text-muted-foreground\">\n              Selected: {selectedFile.name} ({(selectedFile.size / 1024 / 1024).toFixed(2)} MB)\n            </CardFooter>\n        )}\n      </Card>\n      <Card className=\"glassmorphism flex-1 flex flex-col overflow-hidden\">\n        <CardHeader className=\"flex flex-row items-center justify-between\">\n          <CardTitle className=\"text-xl text-primary\">Uploaded Materials</CardTitle>\n           {isUploading && <Loader2 className=\"w-5 h-5 animate-spin text-primary\" />}\n        </CardHeader>\n        <CardContent className=\"flex-1 overflow-hidden p-0\">\n          <ScrollArea className=\"h-full p-6\">\n            {materials.length === 0 && !isPageLoading ? (\n              <p className=\"text-center text-muted-foreground mt-4\">No materials uploaded yet.</p>\n            ) : (\n              <div className=\"space-y-4\">\n                {materials.map((material) => (\n                  <MaterialItem\n                    key={material.id}\n                    material={material}\n                    onDelete={handleDelete}\n                  />\n                ))}\n              </div>\n            )}\n          </ScrollArea>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1602, "column": 0}, "map": {"version":3,"sources":["file:///Users/tanishqbedi/Documents/Projects/kageyama/lifeos/src/app/goals/page.tsx"],"sourcesContent":["\n'use client';\n\nimport React, { useState, useEffect, useCallback, ChangeEvent, FormEvent, useMemo, memo } from 'react';\nimport { useAuth } from '@/hooks/use-auth';\nimport { Card, CardHeader, CardTitle, CardContent, CardFooter } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Button } from \"@/components/ui/button\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Target, Plus, Trash2, Edit, X, Check as CheckIcon, Wand2, Loader2, Calendar as CalendarIcon } from 'lucide-react'; // Removed CheckCircle, Circle, ListChecks\nimport { useToast } from \"@/hooks/use-toast\";\nimport { cn } from '@/lib/utils';\nimport { Goal, Task } from '@/types';\nimport { format, parseISO, isValid, startOfDay } from 'date-fns';\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { AlertDialog, AlertDialogAction, AlertDialogCancel, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle, AlertDialogTrigger } from \"@/components/ui/alert-dialog\";\nimport { breakDownGoalIntoTasks } from '@/ai/flows/goal-breakdown-flow';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Label } from \"@/components/ui/label\";\n// import { useAuth } from '@/hooks/use-auth'; // Remove duplicate import\nimport { loadUserData, saveUserData } from '@/lib/local-storage';\n\nconst GOALS_SUFFIX = 'goals';\nconst TASKS_SUFFIX = 'tasks';\n\n// Helper: Convert date strings in an array of objects to Date objects\nconst parseDatesInArray = <T extends { [key: string]: any }>(items: T[], dateFields: (keyof T)[]): T[] => {\n    return items.map(item => {\n        const newItem = { ...item };\n        dateFields.forEach(field => {\n            if (newItem[field] && typeof newItem[field] === 'string') {\n                const date = parseISO(newItem[field]);\n                newItem[field] = isValid(date) ? date : null; // Set to null if invalid\n            } else if (newItem[field] && typeof newItem[field] === 'number') { // Handle timestamps\n                 newItem[field] = new Date(newItem[field]);\n            } else if (!newItem[field]) { // Ensure null if originally null/undefined\n                newItem[field] = null;\n            }\n        });\n        return newItem;\n    });\n};\n\n\nconst getGoalProgress = (goalId: string, tasks: Task[]): number => {\n  const relevantTasks = tasks.filter(task => task.goalId === goalId);\n  if (relevantTasks.length === 0) return 0;\n  const completedTasks = relevantTasks.filter(task => task.completed);\n  return Math.round((completedTasks.length / relevantTasks.length) * 100);\n};\n\nconst GoalItem = memo(({ goal, progress, onSelect, onDelete, onEdit, isSelected, isSaving }: {\n    goal: Goal; progress: number; onSelect: (goal: Goal) => void;\n    onDelete: (id: string, name: string) => void; onEdit: (goal: Goal) => void;\n    isSelected: boolean; isSaving: boolean;\n}) => {\n    const targetDate = goal.targetDate && isValid(new Date(goal.targetDate)) ? new Date(goal.targetDate) : null;\n    return (\n    <Card className={cn(\"glassmorphism hover-glow cursor-pointer\", isSelected && \"ring-2 ring-primary\", isSaving && \"opacity-70\")} onClick={() => !isSaving && onSelect(goal)}>\n        <CardHeader className=\"pb-2\">\n            <div className=\"flex justify-between items-start\">\n                <CardTitle className=\"text-lg text-primary truncate\">{goal.name}</CardTitle>\n                <div className=\"flex gap-1\">\n                    <Button variant=\"ghost\" size=\"icon\" className=\"h-7 w-7\" onClick={e => { e.stopPropagation(); !isSaving && onEdit(goal); }} disabled={isSaving}><Edit className=\"w-4 h-4\" /></Button>\n                    <AlertDialog>\n                        <AlertDialogTrigger asChild><Button variant=\"ghost\" size=\"icon\" className=\"h-7 w-7 text-destructive\" onClick={e => e.stopPropagation()} disabled={isSaving}><Trash2 className=\"w-4 h-4\" /></Button></AlertDialogTrigger>\n                        <AlertDialogContent><AlertDialogHeader><AlertDialogTitle>Delete \"{goal.name}\"?</AlertDialogTitle><AlertDialogDescription>This unlinks tasks but doesn't delete them.</AlertDialogDescription></AlertDialogHeader><AlertDialogFooter><AlertDialogCancel disabled={isSaving}>Cancel</AlertDialogCancel><AlertDialogAction onClick={() => onDelete(goal.id, goal.name)} className=\"bg-destructive\" disabled={isSaving}>Delete</AlertDialogAction></AlertDialogFooter></AlertDialogContent>\n                    </AlertDialog>\n                </div>\n            </div>\n             <span className={`text-xs px-2 py-0.5 rounded-full ${goal.type === 'long-term' ? 'bg-blue-500/20 text-blue-400' : 'bg-green-500/20 text-green-400'}`}>{goal.type === 'long-term' ? 'Long-Term' : 'Short-Term'}</span>\n        </CardHeader>\n        <CardContent className=\"pb-4 pt-2\">\n            <p className=\"text-sm text-muted-foreground mb-3 line-clamp-2\">{goal.description || 'No description.'}</p>\n            <div className=\"flex justify-between items-center text-xs mb-1\"><span className=\"text-muted-foreground\">Progress</span><span>{progress}%</span></div>\n            <Progress value={progress} className=\"h-2\" />\n        </CardContent>\n         {targetDate && <CardFooter className=\"pt-0 pb-3 text-xs text-muted-foreground\"><CalendarIcon className=\"w-3 h-3 mr-1\"/> Target: {format(targetDate, 'PP')}</CardFooter>}\n    </Card>\n)});\nGoalItem.displayName = 'GoalItem';\n\nconst TaskSubItem = memo(({ task, onToggle, isSaving }: { task: Task, onToggle: (taskId: string, currentState: boolean) => void, isSaving: boolean }) => {\n    const dueDate = task.dueDate && isValid(new Date(task.dueDate)) ? new Date(task.dueDate) : null;\n    return (\n    <div className={cn(\"flex items-center gap-2 p-2 bg-secondary/40 rounded hover:bg-secondary/60\", isSaving && \"opacity-70\")}>\n        <Checkbox id={`task-sub-${task.id}`} checked={task.completed} onCheckedChange={() => !isSaving && onToggle(task.id, task.completed)} disabled={isSaving} className=\"h-4 w-4\"/>\n        <label htmlFor={`task-sub-${task.id}`} className={cn(\"text-sm flex-1 truncate\", task.completed && \"text-muted-foreground line-through\", isSaving ? \"cursor-default\" : \"cursor-pointer\")}>{task.text}</label>\n        {dueDate && <span className=\"text-xs text-muted-foreground flex-shrink-0\">{format(dueDate, 'MMM d')}</span>}\n    </div>\n)});\nTaskSubItem.displayName = 'TaskSubItem';\n\n\nexport default function GoalsPage() {\n  const { userId, loading: authLoading } = useAuth();\n  const [goals, setGoals] = useState<Goal[]>([]);\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [selectedGoal, setSelectedGoal] = useState<Goal | null>(null);\n  const [isPageLoading, setIsPageLoading] = useState(true);\n  const [hasFetched, setHasFetched] = useState(false);\n  const [isEditingGoal, setIsEditingGoal] = useState(false);\n  const [isAddingGoal, setIsAddingGoal] = useState(false);\n  const [editGoalData, setEditGoalData] = useState<Partial<Goal>>({});\n  const [newTaskText, setNewTaskText] = useState('');\n  const [isBreakingDown, setIsBreakingDown] = useState(false);\n  const [isSaving, setIsSaving] = useState(false); // General saving state for modal\n  const [savingItemId, setSavingItemId] = useState<string | null>(null); // For individual item operations\n\n  const { toast } = useToast();\n\n  useEffect(() => {\n      const loadData = () => {\n          if (!authLoading && userId && !hasFetched) {\n              setIsPageLoading(true);\n              try {\n                  const loadedGoals = loadUserData<Goal[]>(userId, GOALS_SUFFIX) || [];\n                  setGoals(parseDatesInArray(loadedGoals, ['createdAt', 'updatedAt', 'targetDate']));\n                  const loadedTasks = loadUserData<Task[]>(userId, TASKS_SUFFIX) || [];\n                  setTasks(parseDatesInArray(loadedTasks, ['createdAt', 'updatedAt', 'dueDate', 'completedAt']));\n                  setHasFetched(true);\n              } catch (error) { toast({ title: \"Error Loading Data\", variant: \"destructive\" });\n              } finally { setIsPageLoading(false); }\n          } else if (!authLoading && !userId) {\n              setGoals([]); setTasks([]); setSelectedGoal(null); setHasFetched(false); setIsPageLoading(false);\n          } else if (hasFetched) { setIsPageLoading(false); }\n      };\n      loadData();\n  }, [userId, authLoading, hasFetched, toast]);\n\n  const saveGoalsToStorage = useCallback((updatedGoals: Goal[]) => {\n      if (!userId) return;\n      const goalsToSave = updatedGoals.map(g => ({ ...g, createdAt: new Date(g.createdAt).toISOString(), updatedAt: new Date(g.updatedAt).toISOString(), targetDate: g.targetDate ? new Date(g.targetDate).toISOString() : null }));\n      saveUserData(userId, GOALS_SUFFIX, goalsToSave);\n      setGoals(updatedGoals.sort((a,b)=>new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()));\n  }, [userId]);\n  const saveTasksToStorage = useCallback((updatedTasks: Task[]) => {\n      if (!userId) return;\n      const tasksToSave = updatedTasks.map(t => ({ ...t, createdAt: new Date(t.createdAt).toISOString(), updatedAt: new Date(t.updatedAt).toISOString(), dueDate: t.dueDate ? new Date(t.dueDate).toISOString() : undefined, completedAt: t.completedAt ? new Date(t.completedAt).toISOString() : undefined }));\n      saveUserData(userId, TASKS_SUFFIX, tasksToSave);\n      setTasks(updatedTasks.sort((a,b)=>new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()));\n  }, [userId]);\n\n  const handleAddOrUpdateGoal = async () => {\n    if (!userId || !editGoalData.name?.trim()) { toast({ title: \"Name Required\", variant: \"destructive\" }); return; }\n    setIsSaving(true);\n    const now = new Date();\n    try {\n        let savedGoal: Goal;\n        if (isEditingGoal && editGoalData.id) {\n           savedGoal = { ...goals.find(g => g.id === editGoalData.id)!, ...editGoalData, name: editGoalData.name.trim(), description: editGoalData.description?.trim() || null, type: editGoalData.type || 'short-term', targetDate: editGoalData.targetDate || null, updatedAt: now };\n           saveGoalsToStorage(goals.map(g => g.id === savedGoal.id ? savedGoal : g));\n           toast({ title: \"Goal Updated\" });\n        } else {\n           savedGoal = { id: `goal_${Date.now()}`, name: editGoalData.name.trim(), description: editGoalData.description?.trim() || null, type: editGoalData.type || 'short-term', targetDate: editGoalData.targetDate || null, userId, createdAt: now, updatedAt: now };\n            saveGoalsToStorage([...goals, savedGoal]);\n            toast({ title: \"Goal Added\" });\n        }\n        if (selectedGoal?.id === savedGoal.id) setSelectedGoal(savedGoal);\n        resetEditState();\n    } finally { setIsSaving(false); }\n  };\n\n  const handleDeleteGoal = useCallback(async (id: string, name: string) => {\n    if (!userId) return;\n    setSavingItemId(id);\n    try {\n        saveGoalsToStorage(goals.filter(goal => goal.id !== id));\n        saveTasksToStorage(tasks.map(task => task.goalId === id ? { ...task, goalId: undefined, updatedAt: new Date() } : task));\n        if (selectedGoal?.id === id) setSelectedGoal(null);\n        toast({ title: \"Goal Deleted\" });\n    } finally { setSavingItemId(null); }\n  }, [goals, tasks, selectedGoal, userId, saveGoalsToStorage, saveTasksToStorage, toast]);\n\n  const handleAddTaskToGoal = async (event?: FormEvent) => {\n      if (event) event.preventDefault();\n      if (!userId || !selectedGoal || !newTaskText.trim()) return;\n      setSavingItemId('new_task_for_' + selectedGoal.id);\n      const now = new Date();\n      const newTask: Task = { id: `task_${Date.now()}`, text: newTaskText.trim(), goalId: selectedGoal.id, userId, completed: false, createdAt: now, updatedAt: now };\n      try {\n          saveTasksToStorage([...tasks, newTask]);\n          setNewTaskText(''); toast({ title: \"Task Added\" });\n      } finally { setSavingItemId(null); }\n  };\n\n   const handleToggleSubTask = useCallback(async (taskId: string, currentCompletedState: boolean) => {\n       if (!userId) return;\n       setSavingItemId(taskId);\n       try {\n           saveTasksToStorage(tasks.map(task => task.id === taskId ? { ...task, completed: !currentCompletedState, completedAt: !currentCompletedState ? new Date() : undefined, updatedAt: new Date() } : task ));\n       } finally { setSavingItemId(null); }\n   }, [userId, tasks, saveTasksToStorage]);\n\n  const handleAiBreakdown = async () => {\n      if (!selectedGoal || isBreakingDown || !userId) return;\n      setIsBreakingDown(true); toast({ title: \"AI Working...\" });\n      try {\n          const result = await breakDownGoalIntoTasks({ goalName: selectedGoal.name, goalDescription: selectedGoal.description ?? undefined });\n          if (result?.tasks?.length > 0) {\n              const now = new Date();\n              const newAiTasks: Task[] = result.tasks.map(text => ({ id: `task_ai_${Date.now()}_${Math.random().toString(16).slice(2)}`, text, goalId: selectedGoal.id, userId, completed: false, createdAt: now, updatedAt: now }));\n              setSavingItemId('ai_batch_save');\n              saveTasksToStorage([...tasks, ...newAiTasks]);\n              setSavingItemId(null);\n              toast({ title: \"AI Tasks Added\", description: `${newAiTasks.length} tasks added.` });\n          } else toast({ title: \"AI Suggestion\", description: \"AI couldn't suggest tasks.\", variant: \"default\" });\n      } catch (error: any) { toast({ title: \"AI Error\", description: error.message, variant: \"destructive\" });\n      } finally { setIsBreakingDown(false); setSavingItemId(null); }\n  };\n\n  const handleOpenAddModal = () => { setEditGoalData({ type: 'short-term' }); setIsAddingGoal(true); setIsEditingGoal(false); };\n  const handleOpenEditModal = (goal: Goal) => { setEditGoalData({ ...goal, targetDate: goal.targetDate ? new Date(goal.targetDate) : null }); setIsAddingGoal(false); setIsEditingGoal(true); };\n  const resetEditState = () => { setIsAddingGoal(false); setIsEditingGoal(false); setEditGoalData({}); };\n  const handleEditInputChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => setEditGoalData(prev => ({ ...prev, [e.target.name]: e.target.value }));\n  const handleEditSelectChange = (name: keyof Goal, value: string) => setEditGoalData(prev => ({ ...prev, [name]: value }));\n  const handleEditDateChange = (date: Date | undefined) => setEditGoalData(prev => ({ ...prev, targetDate: date || null }));\n\n  const selectedGoalTasks = useMemo(() => selectedGoal ? tasks.filter(task => task.goalId === selectedGoal.id).sort((a,b) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()) : [], [selectedGoal, tasks]);\n  const selectedGoalProgress = useMemo(() => selectedGoal ? getGoalProgress(selectedGoal.id, tasks) : 0, [selectedGoal, tasks]);\n\n  if (authLoading || isPageLoading) return (<div className=\"flex justify-center items-center h-[calc(100vh-8rem)]\"><Loader2 className=\"animate-spin text-primary\" /><span className=\"ml-2\">Loading...</span></div>);\n  if (!userId) return (<div className=\"p-4 text-center\">Please log in.</div>);\n\n  const isEditModalOpen = isAddingGoal || isEditingGoal;\n  const editModalTitle = isAddingGoal ? \"Add New Goal\" : \"Edit Goal\";\n\n  return (\n    <div className=\"panel-slide-fade-in h-[calc(100vh-8rem)] flex flex-col lg:flex-row gap-8\">\n        <div className=\"flex flex-col gap-6 lg:w-1/3 h-full\">\n            <div className=\"flex justify-between items-center\"><h1 className=\"text-3xl font-bold text-primary flex items-center gap-2\"><Target/> Goals</h1><Button onClick={handleOpenAddModal} disabled={isSaving}><Plus /> Add Goal</Button></div>\n            <Card className=\"glassmorphism flex-1 flex flex-col overflow-hidden\">\n                <CardHeader className=\"flex-row items-center justify-between\"><CardTitle className=\"text-xl text-primary\">Your Goals</CardTitle>{(isSaving || savingItemId) && <Loader2 className=\"animate-spin text-primary\" />}</CardHeader>\n                <CardContent className=\"flex-1 p-0\"><ScrollArea className=\"h-full p-4\">\n                        {goals.length === 0 ? (<p className=\"text-center mt-4\">No goals yet.</p>) : (<div className=\"space-y-4\">{goals.map(goal => (<GoalItem key={goal.id} goal={goal} progress={getGoalProgress(goal.id, tasks)} onSelect={setSelectedGoal} onDelete={handleDeleteGoal} onEdit={handleOpenEditModal} isSelected={selectedGoal?.id === goal.id} isSaving={savingItemId === goal.id}/>))}</div>)}\n                </ScrollArea></CardContent>\n            </Card>\n        </div>\n        <div className=\"flex flex-col gap-6 lg:w-2/3 h-full\">\n            <Card className=\"glassmorphism flex-1 flex flex-col overflow-hidden\">\n                <CardHeader><CardTitle className=\"text-xl text-primary truncate\">{selectedGoal ? `Details: ${selectedGoal.name}` : \"Select a Goal\"}</CardTitle>{selectedGoal && (<p className=\"text-sm text-muted-foreground pt-1 line-clamp-3\">{selectedGoal.description || 'No description.'}</p>)}</CardHeader>\n                <CardContent className=\"flex-1 p-0\"><ScrollArea className=\"h-full p-4\">\n                        {!selectedGoal ? (<p className=\"text-center mt-8\">Select a goal to see details.</p>) : (<div className=\"space-y-6\">\n                                <div><div className=\"flex justify-between items-center text-sm mb-1\"><span className=\"text-muted-foreground\">Overall Progress</span><span className=\"font-semibold text-primary\">{selectedGoalProgress}%</span></div><Progress value={selectedGoalProgress} className=\"h-3\" />{selectedGoal.targetDate && (<p className=\"text-xs text-muted-foreground mt-2 text-right\">Target: {format(new Date(selectedGoal.targetDate), 'PP')}</p>)}</div>\n                                <div><h3 className=\"text-lg font-semibold text-primary mb-3 flex justify-between items-center\"><span>Tasks</span><Button variant=\"outline\" size=\"sm\" onClick={handleAiBreakdown} disabled={isBreakingDown || !!savingItemId}><Wand2 className=\"mr-1\"/>AI Breakdown</Button></h3>\n                                    {selectedGoalTasks.length === 0 ? (<p className=\"text-sm text-center py-4\">No tasks for this goal.</p>) : (<div className=\"space-y-2\">{selectedGoalTasks.map(task => (<TaskSubItem key={task.id} task={task} onToggle={handleToggleSubTask} isSaving={savingItemId === task.id || savingItemId === 'ai_batch_save'} />))}</div>)}\n                                    <form onSubmit={handleAddTask} className=\"mt-4 flex gap-2 items-center\">\n                                        <Input placeholder=\"Add new task...\" value={newTaskText} onChange={e => setNewTaskText(e.target.value)} className=\"h-9\" disabled={!!savingItemId} />\n                                        <Button type=\"submit\" size=\"sm\" disabled={!newTaskText.trim() || !!savingItemId}>{savingItemId === `new_task_for_${selectedGoal.id}` ? <Loader2 className=\"animate-spin mr-1\" /> : <Plus className=\"mr-1\" />}Add</Button>\n                                    </form></div></div>)}\n                </ScrollArea></CardContent>\n            </Card>\n        </div>\n        <AlertDialog open={isEditModalOpen} onOpenChange={open => !open && resetEditState()}>\n            <AlertDialogContent>\n                <AlertDialogHeader><AlertDialogTitle>{editModalTitle}</AlertDialogTitle><AlertDialogDescription>Define goal details. Short-term: weeks/months. Long-term: longer periods.</AlertDialogDescription></AlertDialogHeader>\n                <div className=\"grid gap-4 py-4\">\n                     <div className=\"grid grid-cols-4 items-center gap-4\"><Label htmlFor=\"name\" className=\"text-right\">Name</Label><Input id=\"name\" name=\"name\" value={editGoalData.name || ''} onChange={handleEditInputChange} className=\"col-span-3\" required disabled={isSaving} /></div>\n                     <div className=\"grid grid-cols-4 items-center gap-4\"><Label htmlFor=\"description\" className=\"text-right\">Description</Label><Textarea id=\"description\" name=\"description\" value={editGoalData.description || ''} onChange={handleEditInputChange} className=\"col-span-3\" placeholder=\"(Optional)\" disabled={isSaving}/></div>\n                     <div className=\"grid grid-cols-4 items-center gap-4\"><Label htmlFor=\"type\" className=\"text-right\">Type</Label>\n                         <Select value={editGoalData.type || 'short-term'} onValueChange={value => handleEditSelectChange('type', value as 'short-term'|'long-term')} name=\"type\" disabled={isSaving}>\n                            <SelectTrigger className=\"col-span-3\"><SelectValue /></SelectTrigger>\n                            <SelectContent><SelectItem value=\"short-term\">Short-Term</SelectItem><SelectItem value=\"long-term\">Long-Term</SelectItem></SelectContent>\n                        </Select></div>\n                     <div className=\"grid grid-cols-4 items-center gap-4\"><Label htmlFor=\"targetDate\" className=\"text-right\">Target Date</Label>\n                         <Popover><PopoverTrigger asChild><Button variant=\"outline\" className={cn(\"col-span-3 justify-start\", !editGoalData.targetDate && \"text-muted-foreground\")} disabled={isSaving}><CalendarIcon className=\"mr-2 h-4 w-4\" />{editGoalData.targetDate ? format(new Date(editGoalData.targetDate), \"PPP\") : <span>Pick date (Optional)</span>}</Button></PopoverTrigger><PopoverContent className=\"w-auto p-0\"><Calendar mode=\"single\" selected={editGoalData.targetDate ? new Date(editGoalData.targetDate) : undefined} onSelect={handleEditDateChange} initialFocus /></PopoverContent></Popover></div>\n                </div>\n                <AlertDialogFooter><AlertDialogCancel onClick={resetEditState} disabled={isSaving}>Cancel</AlertDialogCancel><AlertDialogAction onClick={handleAddOrUpdateGoal} disabled={isSaving || !editGoalData.name?.trim()}>{isSaving ? <Loader2 className=\"animate-spin mr-1\" /> : (isAddingGoal ? 'Add Goal' : 'Save Changes')}</AlertDialogAction></AlertDialogFooter>\n            </AlertDialogContent>\n        </AlertDialog>\n    </div>\n  );\n}\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2955, "column": 0}, "map": {"version":3,"sources":["file:///Users/tanishqbedi/Documents/Projects/kageyama/lifeos/src/app/tasks/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, ChangeEvent, FormEvent, useCallback, useMemo, memo, useEffect } from 'react';\nimport { useAuth } from '@/hooks/use-auth';\nimport { Card, CardHeader, CardTitle, CardContent } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Trash2, Plus, ListChecks, Loader2, Calendar as CalendarIcon, Edit, X, Check as CheckIcon } from 'lucide-react';\nimport { useToast } from \"@/hooks/use-toast\";\nimport { cn } from '@/lib/utils';\nimport { Task } from '@/types';\nimport { format, parseISO, isValid, startOfDay } from 'date-fns';\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { loadUserData, saveUserData } from '@/lib/local-storage';\n\nconst TASKS_SUFFIX = 'tasks';\n\nconst TaskItem = memo(({\n    task, onToggle, onDelete, onEdit, isEditing, editText, onEditInputChange, onSaveEdit, onCancelEdit, isSavingCurrent\n}: {\n    task: Task, onToggle: (id: string, completed: boolean) => void, onDelete: (id: string) => void,\n    onEdit: (task: Task) => void, isEditing: boolean, editText: string,\n    onEditInputChange: (e: ChangeEvent<HTMLInputElement>) => void, onSaveEdit: () => void, onCancelEdit: () => void,\n    isSavingCurrent: boolean\n}) => {\n    const dueDate = task.dueDate && isValid(new Date(task.dueDate)) ? new Date(task.dueDate) : null;\n    return (\n        <div className={cn(\"flex items-center justify-between p-3 bg-secondary/50 rounded-lg hover:bg-secondary transition-colors group min-h-[58px]\", isSavingCurrent && \"opacity-70 pointer-events-none\")}>\n           {isEditing ? (\n                <>\n                    <Input value={editText} onChange={onEditInputChange} className=\"flex-1 mr-2 h-9\" autoFocus onKeyDown={e => { if (e.key === 'Enter') onSaveEdit(); if (e.key === 'Escape') onCancelEdit(); }} disabled={isSavingCurrent} />\n                    <Button onClick={onSaveEdit} size=\"icon\" className=\"bg-green-600 hover:bg-green-700 h-8 w-8\" disabled={isSavingCurrent || !editText.trim() || editText.trim() === task.text}><CheckIcon /></Button>\n                    <Button onClick={onCancelEdit} variant=\"ghost\" size=\"icon\" className=\"h-8 w-8\" disabled={isSavingCurrent}><X /></Button>\n                </>\n           ) : (\n                <>\n                    <div className=\"flex items-center gap-3 overflow-hidden flex-1\">\n                         <Checkbox id={`task-${task.id}`} checked={task.completed} onCheckedChange={() => onToggle(task.id, task.completed)} className=\"flex-shrink-0 h-5 w-5\" disabled={isSavingCurrent} />\n                         <label htmlFor={`task-${task.id}`} className={cn(\"flex-1 font-medium truncate cursor-pointer\", task.completed && \"line-through text-muted-foreground\")}>{task.text}</label>\n                    </div>\n                    <div className=\"flex items-center gap-1 ml-2 flex-shrink-0\">\n                        {isSavingCurrent && <Loader2 className=\"w-4 h-4 animate-spin text-primary\" />}\n                        {task.priority && !isSavingCurrent && <span className={cn(\"text-xs font-semibold px-1.5 py-0.5 rounded-full\", task.priority === 'high' && 'bg-red-500/20 text-red-400', task.priority === 'medium' && 'bg-yellow-500/20 text-yellow-400', task.priority === 'low' && 'bg-blue-500/20 text-blue-400')}>{task.priority[0].toUpperCase()}</span>}\n                         {dueDate && !isSavingCurrent && <span className=\"text-xs text-muted-foreground flex items-center gap-1\"><CalendarIcon className=\"w-3 h-3\" />{format(dueDate, 'MMM d')}</span>}\n                        {!isSavingCurrent && <>\n                          <Button variant=\"ghost\" size=\"icon\" className=\"opacity-0 group-hover:opacity-100 h-7 w-7\" onClick={() => onEdit(task)}><Edit className=\"w-4 h-4\" /></Button>\n                          <Button variant=\"ghost\" size=\"icon\" className=\"text-destructive opacity-0 group-hover:opacity-100 h-7 w-7\" onClick={() => onDelete(task.id)}><Trash2 className=\"w-4 h-4\" /></Button>\n                        </>}\n                    </div>\n               </>\n            )}\n        </div>\n    );\n});\nTaskItem.displayName = 'TaskItem';\n\nexport default function TasksPage() {\n  const { userId, loading: authLoading } = useAuth();\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [isPageLoading, setIsPageLoading] = useState(true);\n  const [hasFetched, setHasFetched] = useState(false);\n  const [newTaskText, setNewTaskText] = useState('');\n  const [newTaskDueDate, setNewTaskDueDate] = useState<Date | undefined>(undefined);\n  const [newTaskPriority, setNewTaskPriority] = useState<'low' | 'medium' | 'high' | undefined>(undefined);\n  const [editingTask, setEditingTask] = useState<Task | null>(null);\n  const [editText, setEditText] = useState('');\n  const [savingTaskId, setSavingTaskId] = useState<string | null>(null); // For individual task saving states\n  const [isAddingTask, setIsAddingTask] = useState(false); // For new task adding state\n\n  const { toast } = useToast();\n\n   useEffect(() => {\n       const fetchTasks = () => {\n           if (!authLoading && userId && !hasFetched) {\n               setIsPageLoading(true);\n               try {\n                   const loadedTasks = loadUserData<Task[]>(userId, TASKS_SUFFIX) || [];\n                   const tasksWithDates = loadedTasks.map(t => ({\n                       ...t,\n                       createdAt: t.createdAt ? parseISO(t.createdAt) : new Date(),\n                       updatedAt: t.updatedAt ? parseISO(t.updatedAt) : new Date(),\n                       dueDate: t.dueDate ? parseISO(t.dueDate) : undefined,\n                       completedAt: t.completedAt ? parseISO(t.completedAt) : undefined,\n                   }));\n                   setTasks(tasksWithDates.sort((a,b) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()));\n                   setHasFetched(true);\n               } catch (error) {\n                   console.error(\"Error loading tasks:\", error);\n                   toast({ title: \"Error Loading Tasks\", variant: \"destructive\" });\n               } finally {\n                   setIsPageLoading(false);\n               }\n           } else if (!authLoading && !userId) {\n               setTasks([]); setHasFetched(false); setIsPageLoading(false);\n           } else if (hasFetched) {\n               setIsPageLoading(false);\n           }\n       };\n       fetchTasks();\n   }, [userId, authLoading, hasFetched, toast]);\n\n   const saveTasksToStorage = useCallback((updatedTasks: Task[]) => {\n       if (!userId) return;\n       const tasksToSave = updatedTasks.map(t => ({\n           ...t,\n           createdAt: new Date(t.createdAt).toISOString(),\n           updatedAt: new Date(t.updatedAt).toISOString(),\n           dueDate: t.dueDate ? new Date(t.dueDate).toISOString() : undefined,\n           completedAt: t.completedAt ? new Date(t.completedAt).toISOString() : undefined,\n       }));\n       saveUserData(userId, TASKS_SUFFIX, tasksToSave);\n       setTasks(updatedTasks.sort((a,b) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()));\n   }, [userId]);\n\n  const handleInputChange = useCallback((event: ChangeEvent<HTMLInputElement>) => setNewTaskText(event.target.value), []);\n  const handleAddTask = useCallback(async (event?: FormEvent) => {\n    if (event) event.preventDefault();\n    if (!userId || !newTaskText.trim()) return;\n    setIsAddingTask(true);\n    const newTask: Task = {\n        id: `task_${Date.now()}`, text: newTaskText.trim(), dueDate: newTaskDueDate, priority: newTaskPriority,\n        userId, completed: false, createdAt: new Date(), updatedAt: new Date(),\n    };\n    try {\n        saveTasksToStorage([...tasks, newTask]);\n        setNewTaskText(''); setNewTaskDueDate(undefined); setNewTaskPriority(undefined);\n        toast({ title: \"Task Added\" });\n    } finally { setIsAddingTask(false); }\n  }, [newTaskText, newTaskDueDate, newTaskPriority, userId, tasks, saveTasksToStorage, toast]);\n\n  const handleToggleTask = useCallback(async (id: string, currentCompletedState: boolean) => {\n    if (!userId) return;\n    setSavingTaskId(id);\n    const newCompletedState = !currentCompletedState;\n    try {\n         const updatedTasks = tasks.map(task =>\n            task.id === id ? { ...task, completed: newCompletedState, completedAt: newCompletedState ? new Date() : undefined, updatedAt: new Date() } : task\n         );\n         saveTasksToStorage(updatedTasks);\n    } finally { setSavingTaskId(null); }\n  }, [userId, tasks, saveTasksToStorage]);\n\n  const handleDeleteTask = useCallback(async (id: string) => {\n     if (!userId) return;\n     setSavingTaskId(id);\n     const taskToDelete = tasks.find(t => t.id === id);\n     if (!taskToDelete) { setSavingTaskId(null); return; }\n     try {\n          saveTasksToStorage(tasks.filter(task => task.id !== id));\n          toast({ title: \"Task Deleted\" });\n     } finally { setSavingTaskId(null); }\n  }, [userId, tasks, saveTasksToStorage, toast]);\n\n   const handleStartEdit = useCallback((task: Task) => { setEditingTask(task); setEditText(task.text); }, []);\n    const handleCancelEdit = useCallback(() => { setEditingTask(null); setEditText(''); }, []);\n    const handleSaveEdit = useCallback(async () => {\n        if (!editingTask || !editText.trim() || !userId || editText.trim() === editingTask.text) { handleCancelEdit(); return; }\n        setSavingTaskId(editingTask.id);\n        try {\n            const updatedTasks = tasks.map(task =>\n                task.id === editingTask.id ? { ...task, text: editText.trim(), updatedAt: new Date() } : task\n            );\n            saveTasksToStorage(updatedTasks);\n            toast({ title: \"Task Updated\" });\n        } finally { handleCancelEdit(); setSavingTaskId(null); }\n    }, [editingTask, editText, userId, tasks, saveTasksToStorage, toast, handleCancelEdit]);\n\n    const handleEditInputChange = useCallback((event: ChangeEvent<HTMLInputElement>) => setEditText(event.target.value), []);\n    const handlePriorityChange = (value: string) => setNewTaskPriority(value === 'none' ? undefined : value as 'low'|'medium'|'high');\n    const handleDateSelect = (date: Date | undefined) => setNewTaskDueDate(date ? startOfDay(date) : undefined);\n\n   const incompleteTasks = useMemo(() => tasks.filter(task => !task.completed), [tasks]);\n   const completedTasks = useMemo(() => tasks.filter(task => task.completed).sort((a,b) => new Date(b.completedAt || 0).getTime() - new Date(a.completedAt || 0).getTime()), [tasks]);\n\n   if (authLoading || isPageLoading) return (<div className=\"flex justify-center items-center h-[calc(100vh-8rem)]\"><Loader2 className=\"animate-spin text-primary\" /><span className=\"ml-2\">Loading...</span></div>);\n   if (!userId) return (<div className=\"p-4 text-center\">Please log in.</div>);\n\n  return (\n    <div className=\"panel-slide-fade-in h-[calc(100vh-8rem)] flex flex-col gap-8\">\n      <div className=\"flex justify-between items-center\">\n        <h1 className=\"text-3xl font-bold text-primary flex items-center gap-2\"><ListChecks /> Task Manager</h1>\n         {(isAddingTask || savingTaskId) && <Loader2 className=\"animate-spin text-primary\" />}\n      </div>\n      <Card className=\"glassmorphism\">\n        <CardHeader><CardTitle className=\"text-xl text-primary\">Add New Task</CardTitle></CardHeader>\n        <CardContent>\n           <form onSubmit={handleAddTask} className=\"flex flex-col gap-4\">\n                <Input placeholder=\"What needs to be done?\" value={newTaskText} onChange={handleInputChange} disabled={isAddingTask || !!savingTaskId} />\n                <div className=\"flex flex-col sm:flex-row gap-4\">\n                    <Popover><PopoverTrigger asChild><Button variant=\"outline\" className={cn(!newTaskDueDate && \"text-muted-foreground\")} disabled={isAddingTask || !!savingTaskId}><CalendarIcon className=\"mr-2\" />{newTaskDueDate ? format(newTaskDueDate, \"PPP\") : <span>Due date</span>}</Button></PopoverTrigger><PopoverContent className=\"w-auto p-0\"><Calendar mode=\"single\" selected={newTaskDueDate} onSelect={handleDateSelect} initialFocus /></PopoverContent></Popover>\n                     <Select onValueChange={handlePriorityChange} value={newTaskPriority ?? 'none'} disabled={isAddingTask || !!savingTaskId}><SelectTrigger className=\"sm:w-[150px]\"><SelectValue placeholder=\"Priority\" /></SelectTrigger><SelectContent><SelectItem value=\"none\">No Priority</SelectItem><SelectItem value=\"low\">Low</SelectItem><SelectItem value=\"medium\">Medium</SelectItem><SelectItem value=\"high\">High</SelectItem></SelectContent></Select>\n                    <Button type=\"submit\" disabled={!newTaskText.trim() || isAddingTask || !!savingTaskId} className=\"sm:flex-1 hover-glow\">{isAddingTask ? <Loader2 className=\"animate-spin mr-2\"/> : <Plus className=\"mr-2\" />}Add Task</Button>\n                </div>\n           </form>\n        </CardContent>\n      </Card>\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 flex-1 overflow-hidden\">\n        <Card className=\"glassmorphism flex-1 flex flex-col overflow-hidden\">\n            <CardHeader><CardTitle className=\"text-xl text-primary\">To Do ({incompleteTasks.length})</CardTitle></CardHeader>\n            <CardContent className=\"flex-1 overflow-hidden p-0\">\n              <ScrollArea className=\"h-full p-6\">\n                {incompleteTasks.length === 0 ? (<p className=\"text-center text-muted-foreground mt-4\">No tasks.</p>) : (\n                  <div className=\"space-y-3\">\n                    {incompleteTasks.map(task => (<TaskItem key={task.id} task={task} onToggle={handleToggleTask} onDelete={handleDeleteTask} onEdit={handleStartEdit} isEditing={editingTask?.id === task.id} editText={editText} onEditInputChange={handleEditInputChange} onSaveEdit={handleSaveEdit} onCancelEdit={handleCancelEdit} isSavingCurrent={savingTaskId === task.id}/>))}\n                  </div>)}\n              </ScrollArea>\n            </CardContent>\n        </Card>\n         <Card className=\"glassmorphism flex-1 flex flex-col overflow-hidden\">\n            <CardHeader><CardTitle className=\"text-xl text-muted-foreground\">Completed ({completedTasks.length})</CardTitle></CardHeader>\n            <CardContent className=\"flex-1 overflow-hidden p-0\">\n              <ScrollArea className=\"h-full p-6\">\n                 {completedTasks.length === 0 ? (<p className=\"text-center text-muted-foreground mt-4\">No completed tasks.</p>) : (\n                   <div className=\"space-y-3\">\n                     {completedTasks.map(task => (<TaskItem key={task.id} task={task} onToggle={handleToggleTask} onDelete={handleDeleteTask} onEdit={handleStartEdit} isEditing={editingTask?.id === task.id} editText={editText} onEditInputChange={handleEditInputChange} onSaveEdit={handleSaveEdit} onCancelEdit={handleCancelEdit} isSavingCurrent={savingTaskId === task.id} />))}\n                   </div>)}\n              </ScrollArea>\n            </CardContent>\n         </Card>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3801, "column": 0}, "map": {"version":3,"sources":["file:///Users/tanishqbedi/Documents/Projects/kageyama/lifeos/src/app/habits/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect, useCallback, ChangeEvent, FormEvent, useMemo, memo } from 'react';\nimport { useAuth } from '@/hooks/use-auth';\nimport { Card, CardHeader, CardTitle, CardContent } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Activity, Trash2, Plus, Flame, Edit, X, Check as CheckIcon, Loader2 } from 'lucide-react'; // Removed CalendarDays, CheckCircle\nimport { useToast } from \"@/hooks/use-toast\";\nimport { cn } from '@/lib/utils';\nimport { format, startOfWeek, endOfWeek, eachDayOfInterval, isSameDay, subDays, parseISO, startOfDay, isValid } from 'date-fns';\nimport { Habit, HabitLog } from '@/types';\nimport { loadUserData, saveUserData } from '@/lib/local-storage';\n\nconst HABITS_SUFFIX = 'habits';\nconst LOGS_SUFFIX = 'habitLogs';\n\n// Helper: Convert date strings in an array of objects to Date objects\nconst parseDatesInArray = <T extends Record<string, any>>(items: T[], dateFields: (keyof T)[]): T[] => {\n    return items.map(item => {\n        const newItem = { ...item };\n        dateFields.forEach(field => {\n            if (newItem[field] && typeof newItem[field] === 'string') {\n                const date = parseISO(newItem[field]);\n                if (isValid(date)) {\n                    newItem[field] = date;\n                } else {\n                    newItem[field] = new Date(); // Fallback\n                }\n            } else if (newItem[field] && typeof newItem[field] === 'number') { // Handle timestamps\n                newItem[field] = new Date(newItem[field]);\n            }\n        });\n        return newItem;\n    });\n};\n\n\nconst HabitItem = memo(({ habit, todayLog, streak, onToggle, onEdit, onDelete, isSavingCurrent }: {\n    habit: Habit; todayLog?: HabitLog | null; streak: number;\n    onToggle: (habitId: string, date: Date, currentCompleted: boolean) => void;\n    onEdit: (habit: Habit) => void; onDelete: (id: string, name: string) => void;\n    isSavingCurrent: boolean;\n}) => {\n    const today = startOfDay(new Date());\n    const isCompletedToday = todayLog?.completed ?? false;\n    return (\n        <div className={cn(\"flex items-center justify-between p-4 bg-secondary/50 rounded-lg group\", isSavingCurrent && \"opacity-70 pointer-events-none\")}>\n            <div className=\"flex items-center gap-3 overflow-hidden flex-1\">\n                <Checkbox id={`habit-${habit.id}`} checked={isCompletedToday} onCheckedChange={() => onToggle(habit.id, today, isCompletedToday)}\n                    className={cn(\"h-6 w-6 rounded-full\", isCompletedToday ? 'border-primary bg-primary' : 'border-muted-foreground')} disabled={isSavingCurrent} >\n                    {isCompletedToday && <CheckIcon className=\"w-4 h-4 text-primary-foreground\" />}\n                </Checkbox>\n                <label htmlFor={`habit-${habit.id}`} className={cn(\"flex-1 font-medium truncate cursor-pointer\", isCompletedToday && \"line-through text-muted-foreground\")}>{habit.name}</label>\n            </div>\n            <div className=\"flex items-center gap-2 flex-shrink-0 ml-4\">\n                {isSavingCurrent && <Loader2 className=\"w-4 h-4 animate-spin text-primary\" />}\n                {streak > 0 && !isSavingCurrent && <div className=\"flex items-center text-xs text-orange-400 bg-orange-900/50 px-2 py-1 rounded-full\"><Flame className=\"w-3 h-3 mr-1\" />{streak}</div>}\n                 {!isSavingCurrent && <>\n                    <Button variant=\"ghost\" size=\"icon\" className=\"opacity-0 group-hover:opacity-100 h-8 w-8\" onClick={() => onEdit(habit)}><Edit className=\"w-4 h-4\" /></Button>\n                    <Button variant=\"ghost\" size=\"icon\" className=\"text-destructive opacity-0 group-hover:opacity-100 h-8 w-8\" onClick={() => onDelete(habit.id, habit.name)}><Trash2 className=\"w-4 h-4\" /></Button>\n                 </>}\n            </div>\n        </div>\n    );\n});\nHabitItem.displayName = 'HabitItem';\n\nconst WeeklyHeatmap = memo(({ logs }: { logs: HabitLog[] }) => {\n    const today = startOfDay(new Date());\n    const start = startOfWeek(today, { weekStartsOn: 1 });\n    const end = endOfWeek(today, { weekStartsOn: 1 });\n    const weekDays = eachDayOfInterval({ start, end });\n    const logMap = useMemo(() => {\n        const map = new Map<string, HabitLog[]>();\n        logs.forEach(log => {\n             const logDate = log.date && isValid(new Date(log.date)) ? startOfDay(new Date(log.date)) : null;\n             if (logDate) {\n                 const dateString = format(logDate, 'yyyy-MM-dd');\n                 map.set(dateString, [...(map.get(dateString) || []), log]);\n             }\n        });\n        return map;\n    }, [logs]);\n    const intensityClasses = [\"bg-muted/40\", \"bg-primary/20\", \"bg-primary/40\", \"bg-primary/60\", \"bg-primary/80\", \"bg-primary\"];\n    return (\n        <div className=\"mt-6 p-4 bg-secondary/30 rounded-lg\">\n            <div className=\"flex justify-between items-center mb-3\"><h3 className=\"text-sm font-medium text-primary\">This Week</h3><span className=\"text-xs text-muted-foreground\">{format(start, 'MMM d')} - {format(end, 'MMM d')}</span></div>\n            <div className=\"grid grid-cols-7 gap-2\">\n                {weekDays.map(day => {\n                    const dayLogs = logMap.get(format(day, 'yyyy-MM-dd')) || [];\n                    const completedCount = dayLogs.filter(l => l.completed).length;\n                    const intensity = Math.min(5, Math.ceil(completedCount / 1.5)); // Adjusted scaling\n                    return (<div key={day.toISOString()} className=\"flex flex-col items-center gap-1\"><span className=\"text-xs text-muted-foreground\">{format(day, 'E')[0]}</span><div title={`${format(day,'PP')}: ${completedCount} completed`} className={cn(\"w-6 h-6 rounded\", day > today ? 'bg-muted/20' : intensityClasses[intensity])}/></div>);\n                })}\n            </div>\n        </div>\n    );\n});\nWeeklyHeatmap.displayName = 'WeeklyHeatmap';\n\nexport default function HabitsPage() {\n    const { userId, loading: authLoading } = useAuth();\n    const [habits, setHabits] = useState<Habit[]>([]);\n    const [habitLogs, setHabitLogs] = useState<HabitLog[]>([]);\n    const [isPageLoading, setIsPageLoading] = useState(true);\n    const [hasFetched, setHasFetched] = useState(false);\n    const [newHabitText, setNewHabitText] = useState('');\n    const [editingHabit, setEditingHabit] = useState<Habit | null>(null);\n    const [editText, setEditText] = useState('');\n    const [savingHabitId, setSavingHabitId] = useState<string | null>(null); // For individual saving states\n    const [isAddingHabit, setIsAddingHabit] = useState(false); // For new habit adding\n    const { toast } = useToast();\n\n     useEffect(() => {\n       const loadData = () => {\n           if (!authLoading && userId && !hasFetched) {\n               setIsPageLoading(true);\n               try {\n                   const loadedHabits = loadUserData<Habit[]>(userId, HABITS_SUFFIX) || [];\n                   setHabits(parseDatesInArray(loadedHabits, ['createdAt']));\n                   const loadedLogs = loadUserData<HabitLog[]>(userId, LOGS_SUFFIX) || [];\n                   setHabitLogs(parseDatesInArray(loadedLogs, ['date']));\n                   setHasFetched(true);\n               } catch (error) {\n                   console.error(\"Error loading habits data:\", error);\n                   toast({ title: \"Error Loading Data\", variant: \"destructive\" });\n               } finally { setIsPageLoading(false); }\n           } else if (!authLoading && !userId) {\n               setHabits([]); setHabitLogs([]); setHasFetched(false); setIsPageLoading(false);\n           } else if (hasFetched) { setIsPageLoading(false); }\n       };\n       loadData();\n   }, [userId, authLoading, hasFetched, toast]);\n\n   const saveHabitsToStorage = useCallback((updatedHabits: Habit[]) => {\n        if (!userId) return;\n        const habitsToSave = updatedHabits.map(h => ({ ...h, createdAt: new Date(h.createdAt).toISOString() }));\n        saveUserData(userId, HABITS_SUFFIX, habitsToSave);\n        setHabits(updatedHabits.sort((a,b) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()));\n   }, [userId]);\n   const saveLogsToStorage = useCallback((updatedLogs: HabitLog[]) => {\n        if (!userId) return;\n        const logsToSave = updatedLogs.map(l => ({ ...l, date: startOfDay(new Date(l.date)).toISOString() }));\n        saveUserData(userId, LOGS_SUFFIX, logsToSave);\n        setHabitLogs(updatedLogs);\n   }, [userId]);\n\n    const handleInputChange = useCallback((event: ChangeEvent<HTMLInputElement>) => setNewHabitText(event.target.value), []);\n    const handleAddHabit = useCallback(async (event?: FormEvent) => {\n      if (event) event.preventDefault();\n      if (!userId || !newHabitText.trim()) return;\n      setIsAddingHabit(true);\n      const newHabit: Habit = { id: `habit_${Date.now()}`, name: newHabitText.trim(), userId, createdAt: new Date() };\n      try {\n            saveHabitsToStorage([...habits, newHabit]);\n            setNewHabitText(''); toast({ title: \"Habit Added\" });\n      } finally { setIsAddingHabit(false); }\n    }, [newHabitText, userId, habits, saveHabitsToStorage, toast]);\n\n    const handleToggleHabit = useCallback(async (habitId: string, date: Date, currentCompletedState: boolean) => {\n        if (!userId) return;\n        setSavingHabitId(habitId);\n        const dateOnly = startOfDay(date);\n        const newCompletedState = !currentCompletedState;\n        try {\n             let updatedLogs: HabitLog[];\n             const logIndex = habitLogs.findIndex(log => log.habitId === habitId && isSameDay(startOfDay(new Date(log.date)), dateOnly));\n             if (logIndex > -1) {\n                  updatedLogs = habitLogs.map((log, i) => i === logIndex ? { ...log, completed: newCompletedState } : log);\n             } else {\n                  updatedLogs = [...habitLogs, { id: `log_${habitId}_${dateOnly.toISOString()}`, habitId, date: dateOnly, completed: newCompletedState, userId }];\n             }\n             saveLogsToStorage(updatedLogs);\n        } finally { setSavingHabitId(null); }\n    }, [userId, habitLogs, saveLogsToStorage]);\n\n    const handleDeleteHabit = useCallback(async (id: string, name: string) => {\n         if (!userId || !confirm(`Delete \"${name}\"? This removes the habit and all its history.`)) return;\n         setSavingHabitId(id);\n         try {\n             saveHabitsToStorage(habits.filter(h => h.id !== id));\n             saveLogsToStorage(habitLogs.filter(log => log.habitId !== id));\n             toast({ title: \"Habit Deleted\" });\n         } finally { setSavingHabitId(null); }\n    }, [userId, habits, habitLogs, saveHabitsToStorage, saveLogsToStorage, toast]);\n\n    const handleStartEdit = useCallback((habit: Habit) => { setEditingHabit(habit); setEditText(habit.name); }, []);\n    const handleCancelEdit = useCallback(() => { setEditingHabit(null); setEditText(''); }, []);\n    const handleSaveEdit = useCallback(async () => {\n          if (!editingHabit || !editText.trim() || !userId || editText.trim() === editingHabit.name) { handleCancelEdit(); return; }\n          setSavingHabitId(editingHabit.id);\n          try {\n              saveHabitsToStorage(habits.map(h => h.id === editingHabit.id ? { ...h, name: editText.trim() } : h));\n              toast({ title: \"Habit Updated\" });\n          } finally { handleCancelEdit(); setSavingHabitId(null); }\n      }, [editingHabit, editText, userId, habits, saveHabitsToStorage, toast, handleCancelEdit]);\n    const handleEditInputChange = useCallback((event: ChangeEvent<HTMLInputElement>) => setEditText(event.target.value), []);\n\n    const getHabitStreak = useCallback((habitId: string, logs: HabitLog[]): number => {\n        const relevantLogs = logs.filter(log => log.habitId === habitId && log.completed)\n            .map(log => startOfDay(new Date(log.date)))\n            .sort((a, b) => b.getTime() - a.getTime());\n        if (relevantLogs.length === 0) return 0;\n        let streak = 0; let currentDate = startOfDay(new Date());\n        for (let i = 0; i < relevantLogs.length; i++) {\n            if (isSameDay(relevantLogs[i], currentDate)) {\n                streak++; currentDate = subDays(currentDate, 1);\n            } else if (relevantLogs[i] < subDays(currentDate,1)) { // Gap in streak\n                break;\n            } // If relevantLogs[i] is subDays(currentDate,0) but not today, it means today is missed.\n        }\n        // If today is not completed but yesterday was, the loop correctly counts yesterday.\n        // If today is completed, it's counted.\n        // If neither today nor yesterday completed, streak is 0 (or breaks correctly).\n         if (!isSameDay(relevantLogs[0], startOfDay(new Date())) && !isSameDay(relevantLogs[0], subDays(startOfDay(new Date()), 1))) {\n            return 0; // No streak if not completed today or yesterday.\n        }\n        return streak;\n    }, []);\n\n   const habitsWithLogsAndStreaks = useMemo(() => {\n       const today = startOfDay(new Date());\n       return habits.map(habit => {\n           const logsForHabit = habitLogs.filter(log => log.habitId === habit.id);\n           const todayLog = logsForHabit.find(log => isSameDay(startOfDay(new Date(log.date)), today));\n           return { ...habit, streak: getHabitStreak(habit.id, logsForHabit), todayLog };\n       });\n   }, [habits, habitLogs, getHabitStreak]);\n\n    if (authLoading || isPageLoading) return (<div className=\"flex justify-center items-center h-[calc(100vh-8rem)]\"><Loader2 className=\"animate-spin text-primary\" /><span className=\"ml-2\">Loading...</span></div>);\n    if (!userId) return (<div className=\"p-4 text-center\">Please log in.</div>);\n\n  return (\n    <div className=\"panel-slide-fade-in h-[calc(100vh-8rem)] flex flex-col gap-8\">\n      <div className=\"flex justify-between items-center\">\n         <h1 className=\"text-3xl font-bold text-primary flex items-center gap-2\"><Activity /> Habit Tracker</h1>\n          {(isAddingHabit || savingHabitId) && <Loader2 className=\"animate-spin text-primary\" />}\n      </div>\n      <Card className=\"glassmorphism\">\n        <CardHeader><CardTitle className=\"text-xl text-primary\">Add New Habit</CardTitle></CardHeader>\n        <CardContent>\n           <form onSubmit={handleAddHabit} className=\"flex flex-col sm:flex-row items-center gap-4\">\n                <Input placeholder=\"e.g., Read, Exercise...\" value={newHabitText} onChange={handleInputChange} disabled={isAddingHabit || !!savingHabitId} />\n                <Button type=\"submit\" disabled={!newHabitText.trim() || isAddingHabit || !!savingHabitId} className=\"hover-glow\">\n                     {isAddingHabit ? <Loader2 className=\"animate-spin mr-2\" /> : <Plus className=\"mr-2\" />} Add Habit\n                </Button>\n           </form>\n        </CardContent>\n      </Card>\n      <Card className=\"glassmorphism flex-1 flex flex-col overflow-hidden\">\n          <CardHeader><CardTitle className=\"text-xl text-primary\">Your Habits</CardTitle></CardHeader>\n          <CardContent className=\"flex-1 overflow-hidden p-0\">\n              <ScrollArea className=\"h-full p-6\">\n                {habitsWithLogsAndStreaks.length === 0 ? (<p className=\"text-center text-muted-foreground mt-4\">No habits yet.</p>) : (\n                  <div className=\"space-y-4\">\n                    {habitsWithLogsAndStreaks.map(hws => (editingHabit?.id === hws.id ? (\n                        <div key={hws.id} className=\"flex items-center gap-2 p-3 bg-secondary rounded-lg\">\n                            <Input value={editText} onChange={handleEditInputChange} autoFocus onKeyDown={e => { if (e.key==='Enter') handleSaveEdit(); if (e.key==='Escape') handleCancelEdit();}} disabled={savingHabitId === hws.id} />\n                            <Button onClick={handleSaveEdit} size=\"icon\" className=\"bg-green-600 h-8 w-8\" disabled={savingHabitId === hws.id || !editText.trim() || editText.trim() === editingHabit.name}>{savingHabitId === hws.id ? <Loader2 className=\"animate-spin\"/> : <CheckIcon />}</Button>\n                            <Button onClick={handleCancelEdit} variant=\"ghost\" size=\"icon\" className=\"h-8 w-8\" disabled={savingHabitId === hws.id}><X /></Button>\n                        </div>) : (<HabitItem key={hws.id} habit={hws} todayLog={hws.todayLog} streak={hws.streak} onToggle={handleToggleHabit} onEdit={handleStartEdit} onDelete={handleDeleteHabit} isSavingCurrent={savingHabitId === hws.id} />)))}\n                  </div>)}\n              </ScrollArea>\n          </CardContent>\n      </Card>\n       {habitLogs.length > 0 && (<WeeklyHeatmap logs={habitLogs} />)}\n    </div>\n  );\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4616, "column": 0}, "map": {"version":3,"sources":["file:///Users/tanishqbedi/Documents/Projects/kageyama/lifeos/src/app/timer/page.tsx"],"sourcesContent":["\n'use client';\n\nimport React, { useState, useEffect, useCallback, useRef, useMemo } from 'react';\nimport { useAuth } from '@/hooks/use-auth';\nimport { Card, CardHeader, CardTitle, CardContent, CardFooter } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\"; // Corrected import path\nimport { Progress } from \"@/components/ui/progress\";\nimport { Play, Pause, RotateCcw, Coffee, Brain, History, ListChecks, Loader2 } from 'lucide-react';\nimport { useToast } from \"@/hooks/use-toast\";\nimport { cn } from '@/lib/utils';\nimport { Task, TimerSession } from '@/types';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { format, formatDistanceToNow, parseISO, isValid } from 'date-fns';\nimport { loadUserData, saveUserData } from '@/lib/local-storage';\n\nconst TASKS_SUFFIX = 'tasks';\nconst SESSIONS_SUFFIX = 'timerSessions';\n\ntype TimerMode = 'pomodoro' | 'shortBreak' | 'longBreak';\nconst WORK_DURATION = 25 * 60; const SHORT_BREAK_DURATION = 5 * 60; const LONG_BREAK_DURATION = 15 * 60;\nconst SESSIONS_BEFORE_LONG_BREAK = 4;\n\n// Helper: Convert date strings in an array of objects to Date objects\nconst parseDatesInArray = <T extends { [key: string]: any }>(items: T[], dateFields: (keyof T)[]): T[] => {\n    return items.map(item => {\n        const newItem = { ...item };\n        dateFields.forEach(field => {\n            if (newItem[field] && typeof newItem[field] === 'string') {\n                const date = parseISO(newItem[field]);\n                if (isValid(date)) {\n                    newItem[field] = date;\n                } else {\n                    newItem[field] = new Date(); // Fallback\n                }\n            } else if (newItem[field] && typeof newItem[field] === 'number') {\n                newItem[field] = new Date(newItem[field]);\n            }\n        });\n        return newItem;\n    });\n};\n\n\nexport default function TimerPage() {\n  const { userId, loading: authLoading } = useAuth();\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [sessions, setSessions] = useState<TimerSession[]>([]);\n  const [isPageLoading, setIsPageLoading] = useState(true);\n  const [hasFetched, setHasFetched] = useState(false);\n  const [mode, setMode] = useState<TimerMode>('pomodoro');\n  const [timeLeft, setTimeLeft] = useState(WORK_DURATION);\n  const [isActive, setIsActive] = useState(false);\n  const [sessionCount, setSessionCount] = useState(0);\n  const [selectedTaskId, setSelectedTaskId] = useState<string | undefined>(undefined);\n  const [currentSessionStart, setCurrentSessionStart] = useState<number | null>(null);\n  const [isSaving, setIsSaving] = useState(false);\n  const [isClient, setIsClient] = useState(false);\n  const { toast } = useToast();\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n  const audioRef = useRef<HTMLAudioElement | null>(null);\n\n  useEffect(() => {\n    setIsClient(true);\n     const loadData = () => {\n         if (!authLoading && userId && !hasFetched) {\n             setIsPageLoading(true);\n             try {\n                 const loadedTasks = loadUserData<Task[]>(userId, TASKS_SUFFIX) || [];\n                 setTasks(parseDatesInArray(loadedTasks.filter(t => !t.completed), ['createdAt', 'updatedAt', 'dueDate', 'completedAt']));\n                 const loadedSessions = loadUserData<TimerSession[]>(userId, SESSIONS_SUFFIX) || [];\n                 setSessions(parseDatesInArray(loadedSessions, ['startTime', 'endTime']).sort((a,b) => new Date(b.startTime).getTime() - new Date(a.startTime).getTime()).slice(0,50));\n                 setHasFetched(true);\n             } catch (error) { toast({ title: \"Error Loading Data\", variant: \"destructive\" });\n             } finally { setIsPageLoading(false); }\n         } else if (!authLoading && !userId) {\n             setTasks([]); setSessions([]); setHasFetched(false); setIsPageLoading(false);\n         } else if (hasFetched) { setIsPageLoading(false); }\n     };\n     loadData();\n     if (typeof window !== 'undefined' && !audioRef.current) {\n         try { audioRef.current = new Audio(\"/sounds/beep.wav\"); audioRef.current.load(); }\n         catch (error) { console.error(\"Failed to load audio:\", error); }\n     }\n  }, [userId, authLoading, hasFetched, toast]);\n\n    const saveSessionsToStorage = useCallback((updatedSessions: TimerSession[]) => {\n       if (!userId) return;\n       const sessionsToSave = updatedSessions\n           .sort((a, b) => new Date(b.startTime).getTime() - new Date(a.startTime).getTime())\n           .slice(0, 50)\n           .map(s => ({ ...s, startTime: new Date(s.startTime).toISOString(), endTime: new Date(s.endTime).toISOString() }));\n       saveUserData(userId, SESSIONS_SUFFIX, sessionsToSave);\n       setSessions(updatedSessions.sort((a,b) => new Date(b.startTime).getTime() - new Date(a.startTime).getTime()).slice(0,50));\n   }, [userId]);\n\n   const playSound = useCallback(() => { if (audioRef.current) { audioRef.current.currentTime = 0; audioRef.current.play().catch(console.warn); }}, []);\n   const logSession = useCallback(async (endedMode: TimerMode, startTime: number) => {\n       if (!userId || !startTime || Date.now() - startTime <= 0) { setCurrentSessionStart(null); return; }\n        setIsSaving(true);\n        const newSession: TimerSession = {\n            id: `session_${startTime}`, startTime: new Date(startTime), endTime: new Date(),\n            duration: Math.round((Date.now() - startTime) / 1000), mode: endedMode,\n            associatedTaskId: endedMode === 'pomodoro' ? selectedTaskId : undefined, userId,\n        };\n        try { saveSessionsToStorage([newSession, ...sessions]);\n        } finally { setCurrentSessionStart(null); setIsSaving(false); }\n   }, [userId, selectedTaskId, sessions, saveSessionsToStorage]);\n\n    const getDuration = useCallback((currentMode: TimerMode): number => currentMode === 'pomodoro' ? WORK_DURATION : currentMode === 'shortBreak' ? SHORT_BREAK_DURATION : LONG_BREAK_DURATION, []);\n\n    const switchMode = useCallback(async (newMode: TimerMode) => {\n        if (isActive && currentSessionStart) await logSession(mode, currentSessionStart);\n        setIsActive(false); setMode(newMode); setCurrentSessionStart(null); setTimeLeft(getDuration(newMode));\n    }, [isActive, currentSessionStart, mode, logSession, getDuration]);\n\n   const handleTimerEnd = useCallback(async () => {\n     playSound();\n     const endedMode = mode;\n     if (currentSessionStart) await logSession(endedMode, currentSessionStart);\n     let nextMode: TimerMode; let toastTitle = \"\"; let toastDescription = \"\";\n     if (endedMode === 'pomodoro') {\n       const newSessCount = sessionCount + 1; setSessionCount(newSessCount);\n       if (newSessCount % SESSIONS_BEFORE_LONG_BREAK === 0) { nextMode = 'longBreak'; toastTitle = \"Long Break!\"; toastDescription = `Time for a ${LONG_BREAK_DURATION/60}-min break.`; }\n       else { nextMode = 'shortBreak'; toastTitle = \"Short Break!\"; toastDescription = `Take ${SHORT_BREAK_DURATION/60}-min.`; }\n     } else { nextMode = 'pomodoro'; toastTitle = \"Back to Work!\"; toastDescription = `Starting ${WORK_DURATION/60}-min focus.`; }\n     toast({ title: toastTitle, description: toastDescription });\n     setIsActive(false); setMode(nextMode); setTimeLeft(getDuration(nextMode)); setCurrentSessionStart(null);\n   }, [mode, sessionCount, toast, playSound, logSession, currentSessionStart, getDuration]);\n\n  useEffect(() => {\n    if (isActive && isClient) {\n      if (!currentSessionStart) setCurrentSessionStart(Date.now());\n      intervalRef.current = setInterval(() => {\n        setTimeLeft(prev => { if (prev <= 1) { if (intervalRef.current) clearInterval(intervalRef.current); handleTimerEnd(); return 0; } return prev - 1; });\n      }, 1000);\n    } else if (intervalRef.current) { clearInterval(intervalRef.current); intervalRef.current = null; }\n    return () => { if (intervalRef.current) clearInterval(intervalRef.current); };\n  }, [isActive, isClient, currentSessionStart, handleTimerEnd]);\n\n   const toggleTimer = useCallback(() => {\n       const nextIsActive = !isActive; setIsActive(nextIsActive);\n       if (nextIsActive && !currentSessionStart) setCurrentSessionStart(Date.now());\n       else if (!nextIsActive && currentSessionStart) setCurrentSessionStart(null); // Reset on pause\n   }, [isActive, currentSessionStart]);\n\n   const resetTimer = useCallback(async () => {\n       if (isActive && currentSessionStart) await logSession(mode, currentSessionStart);\n       setIsActive(false); setTimeLeft(getDuration(mode)); setCurrentSessionStart(null);\n   }, [isActive, currentSessionStart, mode, logSession, getDuration]); \n   \n  const handleTaskSelection = (taskId: string) => setSelectedTaskId(taskId === 'none' ? undefined : taskId);\n  const formatTime = (s: number): string => `${Math.floor(s/60).toString().padStart(2,'0')}:${(s%60).toString().padStart(2,'0')}`;\n  const progressPercentage = useMemo(() => (getDuration(mode) - timeLeft) / getDuration(mode) * 100, [mode, timeLeft, getDuration]); \n\n    if (authLoading || isPageLoading) {\n        return (<div className=\"flex justify-center items-center h-[calc(100vh-8rem)]\"><Loader2 className=\"animate-spin text-primary\" /><span className=\"ml-2\">Loading...</span></div>);\n    }\n    if (!userId) {\n        return (<div className=\"p-4 text-center\">Please log in.</div>);\n    }\n\n  return (\n      <div className=\"panel-slide-fade-in h-[calc(100vh-8rem)] flex flex-col lg:flex-row items-start justify-center gap-8 p-4\">\n       <Card className=\"glassmorphism w-full max-w-md text-center flex-shrink-0\">\n            <CardHeader className=\"flex flex-row justify-center gap-2 border-b pb-4\">\n                 <Button variant={mode==='pomodoro'?'default':'ghost'} onClick={()=>switchMode('pomodoro')} disabled={isSaving}><Brain /> Focus</Button>\n                 <Button variant={mode==='shortBreak'?'default':'ghost'} onClick={()=>switchMode('shortBreak')} disabled={isSaving}><Coffee /> Short Break</Button>\n                 <Button variant={mode==='longBreak'?'default':'ghost'} onClick={()=>switchMode('longBreak')} disabled={isSaving}><Coffee /> Long Break</Button>\n            </CardHeader>\n            <CardContent className=\"py-10 space-y-6\">\n              <div className=\"text-8xl font-bold text-primary tabular-nums\">\n                {formatTime(timeLeft)}\n              </div>\n              <Progress value={progressPercentage} className=\"h-3\" />\n             {mode === 'pomodoro' && <p className=\"text-muted-foreground\">Session {sessionCount % SESSIONS_BEFORE_LONG_BREAK + 1}/{SESSIONS_BEFORE_LONG_BREAK}</p>}\n             {mode === 'pomodoro' && (\n                <Select onValueChange={handleTaskSelection} value={selectedTaskId ?? 'none'} disabled={isActive || isSaving}>\n                  <SelectTrigger className=\"w-full\"><SelectValue placeholder=\"Link to a task...\" /></SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"none\">No specific task</SelectItem>\n                    {tasks.map(t=>(\n                      <SelectItem key={t.id} value={t.id}>{t.text}</SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n             )}\n            </CardContent>\n            <CardFooter className=\"flex justify-center gap-4 border-t pt-6\">\n             <Button onClick={toggleTimer} variant={isActive?'outline':'default'} size=\"lg\" className=\"hover-glow\" disabled={isSaving}>\n               {isActive? <Pause /> : <Play /> } {isActive? 'Pause' : 'Start'}\n             </Button>\n             <Button onClick={resetTimer} variant=\"ghost\" size=\"lg\" disabled={isSaving || isActive}><RotateCcw /></Button>\n            </CardFooter>\n        </Card>\n        <Card className=\"glassmorphism w-full lg:w-2/5 flex-1 flex flex-col overflow-hidden\">\n          <CardHeader className=\"flex flex-row items-center justify-between border-b\">\n            <CardTitle className=\"text-xl text-primary flex items-center gap-2\"><History/> Session History</CardTitle>\n            {isSaving && <Loader2 className=\"animate-spin text-primary\" />}\n          </CardHeader>\n          <CardContent className=\"flex-1 overflow-hidden p-0\">\n            <ScrollArea className=\"h-full p-4\">\n              {sessions.length === 0 ? (<p className=\"text-center text-muted-foreground mt-4\">No sessions yet.</p>) : (\n                <div className=\"space-y-3\">\n                {sessions.map(s => { const task = tasks.find(t=>t.id===s.associatedTaskId); const endTime = new Date(s.endTime);\n                                return (\n                                    <div key={s.id} className=\"flex items-center justify-between p-3 bg-secondary/30 rounded\">\n                                        <div className=\"flex-1\">\n                                            <span className=\"font-medium\">{formatTime(s.duration)} - {s.mode}</span>\n                                            {task && s.mode==='pomodoro' && <p className=\"text-xs text-muted-foreground truncate\">Task: {task.text}</p>}\n                                        </div>\n                                        <span className=\"text-xs text-muted-foreground\">{isValid(endTime) ? formatDistanceToNow(endTime,{addSuffix:true}) : 'Unknown'}</span>\n                                    </div>\n                                )})}\n                </div>\n              )}\n            </ScrollArea>\n          </CardContent>\n          <CardFooter className=\"text-xs text-muted-foreground border-t pt-3\">Last {sessions.length} sessions.</CardFooter>\n       </Card>\n    </div>\n  );\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5290, "column": 0}, "map": {"version":3,"sources":["file:///Users/tanishqbedi/Documents/Projects/kageyama/lifeos/src/app/flashcards/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect, useCallback, useRef, memo, ChangeEvent, KeyboardEvent } from 'react';\n// import { useAuth } from '@/hooks/use-auth'; // Already imported below\nimport { Card, CardHeader, CardTitle, CardContent, CardFooter } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Wand2, ChevronLeft, ChevronRight, Loader2, Info, Upload, BookOpen, ArrowLeft, AlertCircle, Share2, UploadCloud, Copy, Edit, Save, Trash2 } from 'lucide-react';\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { generateFlashcardsFromPdf, type GenerateFlashcardsInput, type GenerateFlashcardsOutput, type Flashcard as AIFlashcardType } from '@/ai/flows/generate-flashcards';\nimport Link from 'next/link';\nimport { cn } from '@/lib/utils';\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Input } from '@/components/ui/input';\nimport { StudyMaterial, Deck, Flashcard as DBFlashcardType } from '@/types';\nimport { useAuth } from '@/hooks/use-auth';\nimport { Badge } from \"@/components/ui/badge\";\nimport { loadUserData, saveUserData } from '@/lib/local-storage';\nimport { parseISO, isValid, format } from 'date-fns'; // Added parseISO, isValid, format\n\nconst MATERIALS_SUFFIX = 'materials';\nconst DECKS_SUFFIX = 'flashcardDecks';\nconst CARDS_SUFFIX_PREFIX = 'flashcards_';\n\ntype ViewMode = 'decks' | 'loadingReview' | 'review';\nconst REVIEW_TRANSITION_DELAY = 700;\ntype DisplayFlashcard = DBFlashcardType & AIFlashcardType; // AIFlashcardType has question/answer\n\n// Helper: Convert date strings in an array of objects to Date objects\nconst parseDatesInArray = <T extends Record<string, any>>(items: T[], dateFields: (keyof T)[]): T[] => {\n    return items.map(item => {\n        const newItem = { ...item };\n        dateFields.forEach(field => {\n            if (newItem[field] && typeof newItem[field] === 'string') {\n                const date = parseISO(newItem[field]);\n                if (isValid(date)) {\n                    newItem[field] = date;\n                } else {\n                    console.warn(`Invalid date string for field ${String(field)}: ${newItem[field]}`);\n                    newItem[field] = new Date(); // Fallback\n                }\n            } else if (newItem[field] && typeof newItem[field] === 'number') { // Handle timestamps\n                newItem[field] = new Date(newItem[field]);\n            }\n        });\n        return newItem;\n    });\n};\n\n\n// --- Local Storage Data Management ---\nconst loadDecksFromStorage = (userId: string): Deck[] => {\n    const storedDecks = loadUserData<Deck[]>(userId, DECKS_SUFFIX) || [];\n    return parseDatesInArray(storedDecks, ['createdAt', 'updatedAt']);\n};\n\nconst saveDecksToStorage = (userId: string, decks: Deck[]): void => {\n    const decksToSave = decks.map(deck => ({\n        ...deck,\n        createdAt: new Date(deck.createdAt).toISOString(),\n        updatedAt: new Date(deck.updatedAt).toISOString(),\n        flashcards: undefined, // Do not store full flashcards array on deck object\n    }));\n    saveUserData(userId, DECKS_SUFFIX, decksToSave);\n};\n\nconst loadFlashcardsFromStorage = (userId: string, deckId: string): DBFlashcardType[] => {\n    const storedCards = loadUserData<DBFlashcardType[]>(userId, `${CARDS_SUFFIX_PREFIX}${deckId}`) || [];\n    return parseDatesInArray(storedCards, ['createdAt', 'updatedAt']);\n};\n\nconst saveFlashcardsToStorage = (userId: string, deckId: string, flashcards: DBFlashcardType[]): void => {\n    const cardsToSave = flashcards.map(card => ({\n        ...card,\n        createdAt: new Date(card.createdAt).toISOString(),\n        updatedAt: new Date(card.updatedAt).toISOString(),\n    }));\n    saveUserData(userId, `${CARDS_SUFFIX_PREFIX}${deckId}`, cardsToSave);\n};\n\nconst deleteFlashcardsFromStorage = (userId: string, deckId: string): void => {\n    localStorage.removeItem(`${APP_PREFIX}${userId}_${CARDS_SUFFIX_PREFIX}${deckId}`);\n};\nconst APP_PREFIX = 'lifeOS_'; // Ensure this matches the prefix in local-storage.ts\n\n\n// --- Memoized Components ---\nconst DeckCard = memo(({ deck, cardCount, onClick, onExport, onDelete, onEditName }: {\n    deck: Deck,\n    cardCount: number,\n    onClick: (id: string) => void,\n    onExport: (id: string, name: string) => void,\n    onDelete: (id: string, name: string) => void,\n    onEditName: (deck: Deck) => void,\n}) => (\n    <Card\n        key={deck.id}\n        className=\"bg-secondary/70 hover:bg-secondary transition-colors cursor-pointer hover-glow flex flex-col justify-between relative group\"\n        onClick={() => onClick(deck.id)}\n        role=\"button\"\n        aria-label={`Review deck: ${deck.name}`}\n    >\n        <CardHeader>\n            <CardTitle className=\"text-lg text-secondary-foreground truncate\">{deck.name}</CardTitle>\n             {deck.sourceType === 'import' && <Badge variant=\"outline\" className=\"text-xs absolute top-2 right-2\">Imported</Badge>}\n             {deck.sourceType === 'material' && <Badge variant=\"outline\" className=\"text-xs absolute top-2 right-2\">Generated</Badge>}\n        </CardHeader>\n        <CardContent>\n            <p className=\"text-sm text-muted-foreground\">{cardCount} card{cardCount !== 1 ? 's' : ''}</p>\n        </CardContent>\n        <CardFooter className=\"p-4 pt-0 flex justify-between items-center\">\n            <Button variant=\"ghost\" size=\"sm\" className=\"justify-start text-primary hover:text-primary px-2\">\n                <BookOpen className=\"w-4 h-4 mr-2\"/> Review Deck\n            </Button>\n             <div className=\"flex items-center opacity-0 group-hover:opacity-100 transition-opacity\">\n                <Button\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    className=\"text-muted-foreground hover:text-primary hover:bg-primary/10 h-8 w-8\"\n                    onClick={(e) => { e.stopPropagation(); onEditName(deck); }}\n                    aria-label={`Edit deck name: ${deck.name}`}\n                    title=\"Edit Name\"\n                 >\n                    <Edit className=\"w-4 h-4\" />\n                 </Button>\n                <Button\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    className=\"text-muted-foreground hover:text-primary hover:bg-primary/10 h-8 w-8\"\n                    onClick={(e) => { e.stopPropagation(); onExport(deck.id, deck.name); }}\n                    aria-label={`Export deck: ${deck.name}`}\n                    title=\"Export Deck\"\n                >\n                    <Share2 className=\"w-4 h-4\" />\n                </Button>\n                 <Button\n                     variant=\"ghost\"\n                     size=\"icon\"\n                     className=\"text-destructive hover:text-destructive-foreground hover:bg-destructive h-8 w-8\"\n                     onClick={(e) => { e.stopPropagation(); onDelete(deck.id, deck.name); }}\n                     aria-label={`Delete deck: ${deck.name}`}\n                     title=\"Delete Deck\"\n                 >\n                     <Trash2 className=\"w-4 h-4\" />\n                 </Button>\n             </div>\n        </CardFooter>\n    </Card>\n));\nDeckCard.displayName = 'DeckCard';\n\nconst FlipCard = memo(({ card, isFlipped, onFlip }: { card: DisplayFlashcard, isFlipped: boolean, onFlip: () => void }) => (\n    <div\n        className={cn(\n            \"flip-card w-full max-w-2xl h-96 perspective\",\n            isFlipped ? 'flipped' : ''\n        )}\n        onClick={onFlip}\n        role=\"button\"\n        aria-label={`Flashcard. ${isFlipped ? 'Showing Answer' : 'Showing Question'}. Click or press Space/Enter to flip.`}\n        title=\"Click or press Space/Enter to flip\"\n    >\n        <div className=\"flip-card-inner glassmorphism\">\n            <div className=\"flip-card-front\">\n                <ScrollArea className=\"h-full w-full\">\n                    <CardContent className=\"flex items-center justify-center h-full min-h-[24rem] text-2xl p-8 text-center\">\n                        {card.question}\n                    </CardContent>\n                </ScrollArea>\n            </div>\n            <div className=\"flip-card-back\">\n                <ScrollArea className=\"h-full w-full\">\n                    <CardContent className=\"flex items-center justify-center h-full min-h-[24rem] text-xl p-8 text-center\">\n                        {card.answer}\n                    </CardContent>\n                </ScrollArea>\n            </div>\n        </div>\n    </div>\n));\nFlipCard.displayName = 'FlipCard';\n\n\nexport default function FlashcardsPage() {\n  const { userId, loading: authLoading } = useAuth();\n  const [materials, setMaterials] = useState<StudyMaterial[]>([]);\n  const [decks, setDecks] = useState<Deck[]>([]);\n  const [deckCardCounts, setDeckCardCounts] = useState<Record<string, number>>({});\n  const [currentReviewCards, setCurrentReviewCards] = useState<DisplayFlashcard[]>([]);\n\n  const [selectedMaterialIdForGeneration, setSelectedMaterialIdForGeneration] = useState<string | null>(null);\n  const [viewMode, setViewMode] = useState<ViewMode>('decks');\n  const [selectedDeckId, setSelectedDeckId] = useState<string | null>(null);\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\n  const [isFlipped, setIsFlipped] = useState(false);\n  const [isPageLoading, setIsPageLoading] = useState(true);\n  const [hasFetched, setHasFetched] = useState(false);\n  const [isGenerating, setIsGenerating] = useState<Record<string, boolean>>({});\n  const [isImporting, setIsImporting] = useState(false);\n  const [importString, setImportString] = useState('');\n  const [importDeckName, setImportDeckName] = useState('');\n  const [editingDeck, setEditingDeck] = useState<Deck | null>(null);\n  const [editDeckName, setEditDeckName] = useState('');\n  const [isSaving, setIsSaving] = useState(false);\n\n  const { toast } = useToast();\n  const reviewTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const reviewContainerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n       const loadInitialData = async () => {\n           if (!authLoading && userId && !hasFetched) {\n                setIsPageLoading(true);\n                try {\n                    const loadedMaterials = loadUserData<StudyMaterial[]>(userId, MATERIALS_SUFFIX) || [];\n                    const materialsWithDates = parseDatesInArray(loadedMaterials, ['uploadDate']);\n                    setMaterials(materialsWithDates);\n\n                    const loadedDecks = loadDecksFromStorage(userId);\n                    setDecks(loadedDecks);\n\n                    const counts: Record<string, number> = {};\n                    for (const deck of loadedDecks) {\n                        const cards = loadFlashcardsFromStorage(userId, deck.id);\n                        counts[deck.id] = cards.length;\n                    }\n                    setDeckCardCounts(counts);\n\n                    const firstNonImportedMaterial = materialsWithDates.find(m => !m.isImported && m.dataUri);\n                    if (!selectedMaterialIdForGeneration && firstNonImportedMaterial) {\n                        setSelectedMaterialIdForGeneration(firstNonImportedMaterial.id);\n                    }\n                    setHasFetched(true);\n                } catch (error) {\n                    console.error(\"Error loading flashcard data from localStorage:\", error);\n                    toast({ title: \"Error Loading Data\", description: \"Could not load materials or decks.\", variant: \"destructive\" });\n                } finally {\n                   setIsPageLoading(false);\n                }\n           } else if (!authLoading && !userId) { // Logged out\n               setMaterials([]);\n               setDecks([]);\n               setDeckCardCounts({});\n               setCurrentReviewCards([]);\n               setHasFetched(false);\n               setIsPageLoading(false);\n           } else if (hasFetched) { // Already fetched data\n              setIsPageLoading(false);\n           }\n       };\n       loadInitialData();\n   }, [userId, authLoading, hasFetched, toast, selectedMaterialIdForGeneration]);\n\n\n   useEffect(() => {\n     return () => { if (reviewTimeoutRef.current) clearTimeout(reviewTimeoutRef.current); };\n   }, []);\n\n  const handleSelectMaterialForGeneration = useCallback((materialId: string) => {\n    setSelectedMaterialIdForGeneration(materialId || null);\n  }, []);\n\n  const handleGenerateFlashcards = useCallback(async () => {\n    if (!userId || !selectedMaterialIdForGeneration || isGenerating[selectedMaterialIdForGeneration]) return;\n\n    const selectedMaterial = materials.find(m => m.id === selectedMaterialIdForGeneration);\n    if (!selectedMaterial || !selectedMaterial.dataUri || !selectedMaterial.dataUri.startsWith('data:application/pdf;base64,')) {\n      toast({ title: \"Error\", description: \"Please select a valid uploaded PDF.\", variant: \"destructive\" });\n      return;\n    }\n\n    setIsGenerating(prev => ({ ...prev, [selectedMaterialIdForGeneration]: true }));\n    toast({ title: \"Generating...\", description: `AI creating flashcards for ${selectedMaterial.name}.` });\n\n    try {\n      const input: GenerateFlashcardsInput = { pdfDataUri: selectedMaterial.dataUri };\n      const result = await generateFlashcardsFromPdf(input);\n\n       if (result && Array.isArray(result.flashcards)) {\n             const newCardsInput: AIFlashcardType[] = result.flashcards.filter(c => c && c.question && c.answer);\n             if (newCardsInput.length > 0) {\n                 setIsSaving(true);\n                 const now = new Date();\n                 const newDeckId = `deck_${Date.now()}_${Math.random().toString(16).slice(2)}`;\n                 const newDeckData: Deck = {\n                    id: newDeckId, name: selectedMaterial.name, sourceId: selectedMaterial.id,\n                    sourceType: 'material', userId, createdAt: now, updatedAt: now,\n                 };\n                 const cardsToSave: DBFlashcardType[] = newCardsInput.map((card, index) => ({\n                    id: `card_${newDeckId}_${index}`, question: card.question, answer: card.answer,\n                    deckId: newDeckId, createdAt: now, updatedAt: now,\n                 }));\n\n                 const updatedDecks = [...decks, newDeckData];\n                 saveDecksToStorage(userId, updatedDecks);\n                 saveFlashcardsToStorage(userId, newDeckId, cardsToSave);\n                 setDeckCardCounts(prev => ({...prev, [newDeckId]: cardsToSave.length}));\n                 setDecks(updatedDecks.sort((a, b) => (a.sourceType === 'import' ? 1 : 0) - (b.sourceType === 'import' ? 1 : 0)));\n\n\n                 setIsSaving(false);\n                 toast({ title: \"Generated & Saved\", description: `${cardsToSave.length} cards for ${selectedMaterial.name}.` });\n             } else {\n                 toast({ title: \"No Cards Generated\", description: `AI found no content for ${selectedMaterial.name}.`, variant: \"default\" });\n             }\n       } else {\n            console.error(\"Invalid AI response:\", result);\n            throw new Error(\"AI returned invalid response.\");\n       }\n    } catch (error: any) {\n      console.error(\"Generation error:\", error);\n      toast({ title: \"Generation Failed\", description: error.message || \"Unknown error.\", variant: \"destructive\" });\n       setIsSaving(false);\n    } finally {\n      setIsGenerating(prev => ({ ...prev, [selectedMaterialIdForGeneration]: false }));\n    }\n  }, [userId, selectedMaterialIdForGeneration, isGenerating, materials, decks, toast]);\n\n  const handleDeckClick = useCallback((deckId: string) => {\n     if (reviewTimeoutRef.current) clearTimeout(reviewTimeoutRef.current);\n     if (!userId) return;\n\n     setViewMode('loadingReview');\n     setSelectedDeckId(deckId);\n\n     try {\n        const cards = loadFlashcardsFromStorage(userId, deckId);\n       if (!cards || cards.length === 0) {\n         toast({ title: \"Empty Deck\", description: \"No cards to review.\", variant: \"default\" });\n         setViewMode('decks'); setSelectedDeckId(null); return;\n       }\n       setCurrentReviewCards(cards.map(c => ({...c, question: c.question, answer: c.answer}))); // Map to DisplayFlashcard\n       reviewTimeoutRef.current = setTimeout(() => {\n         setCurrentCardIndex(0); setIsFlipped(false); setViewMode('review');\n         reviewTimeoutRef.current = null;\n       }, REVIEW_TRANSITION_DELAY);\n     } catch (error) {\n       console.error(\"Error loading cards:\", error);\n       toast({ title: \"Error\", description: \"Could not load cards.\", variant: \"destructive\" });\n       setViewMode('decks'); setSelectedDeckId(null);\n     }\n  }, [toast, userId]);\n\n  useEffect(() => {\n      if (viewMode === 'review' && reviewContainerRef.current) reviewContainerRef.current.focus();\n  }, [viewMode]);\n\n  const handleBackToDecks = useCallback(() => {\n     if (reviewTimeoutRef.current) clearTimeout(reviewTimeoutRef.current);\n    setViewMode('decks'); setSelectedDeckId(null); setCurrentReviewCards([]);\n    setCurrentCardIndex(0); setIsFlipped(false);\n  }, []);\n\n  const handleFlip = useCallback(() => setIsFlipped(prev => !prev), []);\n  const handleNextCard = useCallback(() => {\n    if (currentCardIndex < currentReviewCards.length - 1) { setCurrentCardIndex(prev => prev + 1); setIsFlipped(false); }\n  }, [currentCardIndex, currentReviewCards]);\n  const handlePrevCard = useCallback(() => {\n    if (currentCardIndex > 0) { setCurrentCardIndex(prev => prev - 1); setIsFlipped(false); }\n  }, [currentCardIndex]);\n\n   const handleStartEditName = useCallback((deck: Deck) => { setEditingDeck(deck); setEditDeckName(deck.name); }, []);\n   const handleCancelEditName = useCallback(() => { setEditingDeck(null); setEditDeckName(''); }, []);\n    const handleSaveEditName = useCallback(() => {\n        if (!editingDeck || !editDeckName.trim() || !userId || editDeckName.trim() === editingDeck.name) { handleCancelEditName(); return; }\n        const newName = editDeckName.trim();\n        setIsSaving(true);\n        try {\n             const updatedDecks = decks.map(d => d.id === editingDeck.id ? { ...d, name: newName, updatedAt: new Date() } : d);\n             saveDecksToStorage(userId, updatedDecks);\n             setDecks(updatedDecks.sort((a, b) => (a.sourceType === 'import' ? 1 : 0) - (b.sourceType === 'import' ? 1 : 0)));\n             toast({ title: \"Deck Renamed\", description: `Renamed to \"${newName}\".` });\n        } finally { setIsSaving(false); handleCancelEditName(); }\n    }, [editingDeck, editDeckName, userId, decks, toast, handleCancelEditName]);\n\n    const handleDeleteDeck = useCallback((deckId: string, deckName: string) => {\n        if (!userId) return;\n        setIsSaving(true);\n        try {\n            const updatedDecks = decks.filter(d => d.id !== deckId);\n            saveDecksToStorage(userId, updatedDecks);\n            deleteFlashcardsFromStorage(userId, deckId);\n            setDecks(updatedDecks.sort((a, b) => (a.sourceType === 'import' ? 1 : 0) - (b.sourceType === 'import' ? 1 : 0)));\n            setDeckCardCounts(prev => { const newCounts = {...prev}; delete newCounts[deckId]; return newCounts;});\n            toast({ title: \"Deck Deleted\", description: `\"${deckName}\" removed.` });\n        } finally { setIsSaving(false); }\n    }, [userId, decks, toast]);\n\n    const handleExportDeck = useCallback((deckId: string, deckName: string) => {\n        if (!userId) return;\n        setIsSaving(true);\n        try {\n            const cards = loadFlashcardsFromStorage(userId, deckId);\n            if (!cards || cards.length === 0) {\n                toast({ title: \"Error\", description: \"Cannot export: No cards found.\", variant: \"destructive\" }); return;\n            }\n            const exportData = { name: deckName, cards: cards.map(({ question, answer }) => ({ question, answer })) };\n            navigator.clipboard.writeText(JSON.stringify(exportData, null, 2))\n                .then(() => toast({ title: \"Exported!\", description: `\"${deckName}\" copied.` }))\n                .catch(() => toast({ title: \"Export Failed\", description: \"Clipboard error.\", variant: \"destructive\" }));\n        } catch (error) {\n             toast({ title: \"Export Failed\", description: \"Data error.\", variant: \"destructive\" });\n        } finally { setIsSaving(false); }\n    }, [userId, toast]);\n\n    const handleImportDeck = useCallback(() => {\n         if (isImporting || !userId || !importDeckName.trim()) {\n            if (!importDeckName.trim()) toast({ title: \"Import Error\", description: \"Deck name required.\", variant: \"destructive\" });\n            return;\n         }\n         let parsedData: { name?: string; cards: { question: string; answer: string }[] };\n         try {\n             parsedData = JSON.parse(importString);\n             if (!parsedData || !Array.isArray(parsedData.cards) || parsedData.cards.some(c => !c.question || !c.answer)) throw new Error(\"Invalid data structure.\");\n         } catch (error: any) {\n             toast({ title: \"Import Failed\", description: `Invalid JSON. ${error.message}`, variant: \"destructive\" }); return;\n         }\n         setIsImporting(true);\n         try {\n             const now = new Date();\n             const newDeckId = `deck_${Date.now()}_imp_${Math.random().toString(16).slice(2)}`;\n             const newDeckData: Deck = {\n                id: newDeckId, name: importDeckName.trim(), userId, sourceType: 'import',\n                createdAt: now, updatedAt: now, sourceId: null,\n             };\n             const cardsToSave: DBFlashcardType[] = parsedData.cards.map((card, index) => ({\n                 id: `card_${newDeckId}_imp_${index}`, question: card.question, answer: card.answer,\n                 deckId: newDeckId, createdAt: now, updatedAt: now,\n             }));\n            const updatedDecks = [...decks, newDeckData];\n            saveDecksToStorage(userId, updatedDecks);\n            saveFlashcardsToStorage(userId, newDeckId, cardsToSave);\n            setDecks(updatedDecks.sort((a, b) => (a.sourceType === 'import' ? 1 : 0) - (b.sourceType === 'import' ? 1 : 0)));\n            setDeckCardCounts(prev => ({...prev, [newDeckId]: cardsToSave.length}));\n\n            toast({ title: \"Import Successful\", description: `\"${newDeckData.name}\" imported.` });\n            setImportString(''); setImportDeckName('');\n         } finally { setIsImporting(false); }\n    }, [isImporting, importString, importDeckName, userId, decks, toast]);\n\n  useEffect(() => {\n    if (viewMode !== 'review') return;\n    const handleKeyDown = (event: globalThis.KeyboardEvent) => {\n      if (event.key === 'ArrowRight') handleNextCard();\n      else if (event.key === 'ArrowLeft') handlePrevCard();\n      else if (event.key === ' ' || event.key === 'Enter') { event.preventDefault(); handleFlip(); }\n    };\n    const container = reviewContainerRef.current;\n    if (container) container.addEventListener('keydown', handleKeyDown);\n    return () => { if (container) container.removeEventListener('keydown', handleKeyDown); };\n  }, [viewMode, handleNextCard, handlePrevCard, handleFlip]);\n\n  const currentReviewCard = currentReviewCards[currentCardIndex];\n  const selectedDeckName = decks.find(d => d.id === selectedDeckId)?.name;\n  const materialsForGeneration = materials.filter(m => !m.isImported && m.dataUri);\n\n   if (authLoading || isPageLoading) {\n     return ( <div className=\"flex justify-center items-center h-[calc(100vh-8rem)]\"><Loader2 className=\"w-8 h-8 animate-spin text-primary\" /><span className=\"ml-2\">Loading...</span></div> );\n   }\n    if (!userId) { return <div className=\"text-muted-foreground p-4 text-center\">Please log in.</div>; }\n\n   if (viewMode === 'decks') {\n     const currentGenerationMaterialId = selectedMaterialIdForGeneration;\n     const isGeneratingCurrent = currentGenerationMaterialId ? isGenerating[currentGenerationMaterialId] : false;\n     return (\n       <div className=\"panel-slide-fade-in flex flex-col gap-8 h-full\">\n         <h1 className=\"text-3xl font-bold text-primary\">Flashcards</h1>\n         <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n             <Card className=\"glassmorphism\">\n                 <CardHeader><CardTitle className=\"text-xl text-primary flex items-center gap-2\"><Wand2 /> Generate Deck</CardTitle></CardHeader>\n                 <CardContent className=\"flex flex-col items-center gap-4\">\n                      {materialsForGeneration.length === 0 ? (\n                           <div className=\"text-muted-foreground flex-1 flex items-center gap-2 w-full\">No PDFs found. <Link href=\"/materials\" passHref legacyBehavior><Button variant=\"outline\" size=\"sm\"><Upload /> Upload</Button></Link></div>\n                       ) : (\n                           <Select value={selectedMaterialIdForGeneration ?? \"\"} onValueChange={handleSelectMaterialForGeneration} disabled={isGeneratingCurrent || isSaving}>\n                               <SelectTrigger className=\"w-full\"><SelectValue placeholder=\"Select a PDF...\" /></SelectTrigger>\n                               <SelectContent>{materialsForGeneration.map(m => (<SelectItem key={m.id} value={m.id}>{m.name}</SelectItem>))}</SelectContent>\n                           </Select>\n                       )}\n                       <Button onClick={handleGenerateFlashcards} disabled={!selectedMaterialIdForGeneration || isGeneratingCurrent || isSaving || materialsForGeneration.length === 0} className=\"w-full hover-glow\">\n                          {isGeneratingCurrent ? <Loader2 className=\"animate-spin mr-2\" /> : <Wand2 className=\"mr-2\" />} Generate\n                        </Button>\n                 </CardContent>\n                 <CardFooter><Alert variant=\"default\" className=\"border-primary/50 bg-primary/10 text-sm p-3 w-full\"><Info /><AlertTitle>How it Works</AlertTitle><AlertDescription>Select PDF, click \"Generate\". AI creates cards saved locally.</AlertDescription></Alert></CardFooter>\n             </Card>\n             <Card className=\"glassmorphism\">\n                 <CardHeader><CardTitle className=\"text-xl text-primary flex items-center gap-2\"><UploadCloud /> Import Deck</CardTitle></CardHeader>\n                 <CardContent className=\"flex flex-col items-center gap-4\">\n                      <Input placeholder=\"Name for imported deck\" value={importDeckName} onChange={e => setImportDeckName(e.target.value)} disabled={isImporting || isSaving} />\n                      <Textarea placeholder=\"Paste exported JSON here\" value={importString} onChange={e => setImportString(e.target.value)} rows={3} disabled={isImporting || isSaving} />\n                       <Button onClick={handleImportDeck} disabled={!importString.trim() || !importDeckName.trim() || isImporting || isSaving} className=\"w-full hover-glow\">\n                          {isImporting ? <Loader2 className=\"animate-spin mr-2\" /> : <UploadCloud className=\"mr-2\" />} Import\n                        </Button>\n                 </CardContent>\n                 <CardFooter><Alert variant=\"default\" className=\"border-secondary/50 bg-secondary/10 text-sm p-3 w-full\"><Copy /><AlertTitle>Import/Export</AlertTitle><AlertDescription>Export decks (hover Share). Paste JSON here to import locally.</AlertDescription></Alert></CardFooter>\n             </Card>\n        </div>\n         <Card className=\"glassmorphism flex-1 flex flex-col overflow-hidden\">\n            <CardHeader className=\"flex flex-row items-center justify-between\"><CardTitle className=\"text-xl text-primary\">Your Decks</CardTitle>{isSaving && <Loader2 className=\"animate-spin text-primary\" />}</CardHeader>\n            <CardContent className=\"flex-1 overflow-hidden p-0\">\n                 <ScrollArea className=\"h-full p-6\">\n                      {decks.length === 0 ? (<p className=\"text-center text-muted-foreground mt-4\">No decks yet.</p>) : (\n                         <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                           {decks.map(deck => (editingDeck?.id === deck.id ? (\n                                <Card key={`edit-${deck.id}`} className=\"glassmorphism p-4 flex flex-col gap-2\">\n                                     <Input value={editDeckName} onChange={e => setEditDeckName(e.target.value)} autoFocus onKeyDown={e => { if (e.key === 'Enter') handleSaveEditName(); if (e.key === 'Escape') handleCancelEditName(); }} disabled={isSaving} />\n                                     <div className=\"flex justify-end gap-2\">\n                                          <Button variant=\"ghost\" size=\"sm\" onClick={handleCancelEditName} disabled={isSaving}>Cancel</Button>\n                                          <Button size=\"sm\" onClick={handleSaveEditName} disabled={isSaving || !editDeckName.trim() || editDeckName.trim() === editingDeck.name}>{isSaving ? <Loader2 className=\"animate-spin\" /> : 'Save'}</Button>\n                                     </div>\n                                </Card>\n                              ) : (\n                                 <DeckCard key={deck.id} deck={deck} cardCount={deckCardCounts[deck.id] || 0} onClick={handleDeckClick} onExport={handleExportDeck} onDelete={handleDeleteDeck} onEditName={handleStartEditName} />\n                              )))}\n                         </div> )}\n                 </ScrollArea>\n            </CardContent>\n         </Card>\n       </div>\n     );\n   }\n   if (viewMode === 'loadingReview') { return ( <div className=\"flex flex-col justify-center items-center h-[calc(100vh-8rem)] panel-slide-fade-in\"><Loader2 className=\"w-12 h-12 animate-spin text-primary mb-4\" /><p className=\"text-2xl text-muted-foreground animate-pulse\">Ready: \"{selectedDeckName}\"?</p><Button variant=\"ghost\" onClick={handleBackToDecks}><ArrowLeft /> Go Back</Button></div> ); }\n   if (viewMode === 'review' && selectedDeckId && currentReviewCard) {\n     return (\n        <div ref={reviewContainerRef} tabIndex={-1} className=\"panel-slide-fade-in flex flex-col gap-6 h-full outline-none\" aria-live=\"polite\">\n            <div className=\"flex items-center justify-between\">\n                <Button variant=\"outline\" onClick={handleBackToDecks}><ArrowLeft /> Back to Decks</Button>\n                <h1 className=\"text-xl font-semibold text-primary truncate\">Review: {selectedDeckName}</h1>\n                 <span className=\"text-muted-foreground w-24 text-right\">Card {currentCardIndex + 1}/{currentReviewCards.length}</span>\n            </div>\n            <div className=\"flex-1 flex flex-col items-center justify-center space-y-6\">\n                <FlipCard card={currentReviewCard} isFlipped={isFlipped} onFlip={handleFlip} />\n                <div className=\"flex justify-between w-full max-w-2xl items-center\">\n                    <Button onClick={handlePrevCard} disabled={currentCardIndex === 0} variant=\"outline\"><ChevronLeft /></Button>\n                    <span className=\"text-muted-foreground font-medium\">Card {currentCardIndex + 1} of {currentReviewCards.length}</span>\n                    <Button onClick={handleNextCard} disabled={currentCardIndex === currentReviewCards.length - 1} variant=\"outline\"><ChevronRight /></Button>\n                </div>\n                 <p className=\"text-sm text-muted-foreground\">Click card or Space/Enter to flip. Use ← → arrows.</p>\n            </div>\n           <style jsx>{`.perspective{perspective:1500px}.flip-card{background-color:transparent;cursor:pointer;outline:none}.flip-card-inner{position:relative;width:100%;height:100%;text-align:center;transition:transform .7s cubic-bezier(.4,0,.2,1);transform-style:preserve-3d;border-radius:var(--radius)}.flip-card.flipped .flip-card-inner{transform:rotateY(180deg)}.flip-card-front,.flip-card-back{position:absolute;width:100%;height:100%;-webkit-backface-visibility:hidden;backface-visibility:hidden;border-radius:var(--radius);display:flex;flex-direction:column;overflow:hidden}.flip-card-front{color:hsl(var(--card-foreground));background-color:hsl(var(--card)/.7);backdrop-filter:blur(12px);border:1px solid hsl(var(--border)/.6);box-shadow:0 6px 10px -2px #0000001a,0 3px 6px -3px #0000001a}.flip-card-back{transform:rotateY(180deg);background-color:hsl(var(--accent)/.7);backdrop-filter:blur(12px);border:1px solid hsl(var(--border)/.5);box-shadow:0 6px 10px -2px #0000001a,0 3px 6px -3px #0000001a;color:hsl(var(--accent-foreground))}.flip-card-front .flex.items-center.justify-center,.flip-card-back .flex.items-center.justify-center{min-height:100%;height:auto;box-sizing:border-box}`}</style>\n        </div> );\n   }\n   if (viewMode === 'review') { return (<div className=\"flex flex-col justify-center items-center h-[calc(100vh-8rem)] panel-slide-fade-in\"><Alert variant=\"destructive\"><AlertCircle /><AlertTitle>Error</AlertTitle><AlertDescription>Could not load deck/card.</AlertDescription></Alert><Button variant=\"outline\" onClick={handleBackToDecks}><ArrowLeft /> Back</Button></div>); }\n   return (<div className=\"panel-slide-fade-in h-full flex items-center justify-center text-muted-foreground\">Invalid state...</div>);\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6844, "column": 0}, "map": {"version":3,"sources":["file:///Users/tanishqbedi/Documents/Projects/kageyama/lifeos/src/app/notes/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect, ChangeEvent, useCallback, memo, useMemo } from 'react';\nimport { Card, CardHeader, CardTitle, CardContent, CardFooter } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { FileText, Loader2, AlertCircle, Wand2, Info, Upload, Tag, Folder, Search, Edit, Save, Trash2 } from 'lucide-react';\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { generateNotesFromPdf, type GenerateNotesInput } from '@/ai/flows/generate-notes';\nimport Link from 'next/link';\nimport { StudyMaterial, Note, NoteData } from '@/types';\nimport ReactMarkdown from 'react-markdown';\nimport { Badge } from \"@/components/ui/badge\";\nimport { Input } from \"@/components/ui/input\";\nimport { format, parseISO, isValid } from 'date-fns';\nimport { SummarizeWidget } from '@/components/ai/summarize-widget';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { useAuth } from '@/hooks/use-auth';\nimport { loadUserData, saveUserData } from '@/lib/local-storage';\n\nconst MATERIALS_SUFFIX = 'materials';\nconst NOTES_SUFFIX = 'notes';\n\ninterface SelectOption {\n    id: string;\n    name: string;\n    type: 'material' | 'note';\n    isImported?: boolean;\n    dataUri?: string;\n}\n\n// Helper: Convert date strings in an object to Date objects\nconst parseItemDates = <T extends { [key: string]: any }>(item: T, dateFields: (keyof T)[]): T => {\n    const newItem = { ...item };\n    dateFields.forEach(field => {\n        if (newItem[field] && typeof newItem[field] === 'string') {\n            const date = parseISO(newItem[field]);\n            if (isValid(date)) {\n                newItem[field] = date;\n            } else {\n                console.warn(`Invalid date string for field ${String(field)} in item:`, item);\n                newItem[field] = new Date(); // Fallback\n            }\n        } else if (newItem[field] && typeof newItem[field] === 'number') { // Handle timestamps\n            newItem[field] = new Date(newItem[field]);\n        }\n    });\n    return newItem;\n};\n\n\nconst GeneratedNotesDisplay = memo(({ noteData, isLoading, itemName, onContentChange, isEditing }: {\n    noteData: Note | null;\n    isLoading: boolean;\n    itemName: string;\n    onContentChange?: (newContent: string) => void;\n    isEditing: boolean;\n}) => {\n    if (isLoading) return <div className=\"flex items-center justify-center h-full\"><Loader2 className=\"w-6 h-6 animate-spin text-primary\" /></div>;\n    if (!noteData) {\n        return <p className=\"text-center text-muted-foreground mt-4\">{itemName === 'Select an item...' ? 'Select or create a note.' : `No notes for \"${itemName}\".`}</p>;\n    }\n    const updatedAtDate = noteData.updatedAt && isValid(new Date(noteData.updatedAt)) ? new Date(noteData.updatedAt) : new Date();\n    return (\n        <div className=\"space-y-4\">\n             <div className=\"flex flex-wrap gap-2 items-center border-b border-border/50 pb-3 mb-4\">\n                {noteData.category && <Badge variant=\"secondary\" className=\"flex items-center gap-1\"><Folder /> {noteData.category}</Badge>}\n                 {noteData.tags?.map(tag => <Badge key={tag} variant=\"outline\" className=\"flex items-center gap-1\"><Tag /> {tag}</Badge>)}\n             </div>\n             {isEditing && onContentChange ? (\n                 <Textarea value={noteData.content} onChange={(e) => onContentChange(e.target.value)} rows={15} className=\"min-h-[300px] w-full text-base\" autoFocus />\n             ) : ( <ReactMarkdown className=\"prose prose-sm dark:prose-invert max-w-none text-secondary-foreground\">{noteData.content || ''}</ReactMarkdown> )}\n             <CardFooter className=\"text-xs text-muted-foreground border-t border-border/50 pt-4 mt-4 px-0\">Last updated: {format(updatedAtDate, 'PPp')}</CardFooter>\n        </div>\n    );\n});\nGeneratedNotesDisplay.displayName = 'GeneratedNotesDisplay';\n\n\nexport default function NotesPage() {\n  const { userId, loading: authLoading } = useAuth();\n  const [materials, setMaterials] = useState<StudyMaterial[]>([]);\n  const [notes, setNotes] = useState<Record<string, Note>>({});\n  const [selectedItemId, setSelectedItemId] = useState<string | null>(null);\n  const [currentNoteContentForEdit, setCurrentNoteContentForEdit] = useState<string>(''); // Separate state for editing\n  const [isEditing, setIsEditing] = useState(false);\n  const [isGenerating, setIsGenerating] = useState<Record<string, boolean>>({});\n  const [isPageLoading, setIsPageLoading] = useState(true);\n  const [hasFetched, setHasFetched] = useState(false);\n  const [customInstructions, setCustomInstructions] = useState<string>('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [newNoteName, setNewNoteName] = useState('');\n  const [isSaving, setIsSaving] = useState(false);\n  const { toast } = useToast();\n\n   useEffect(() => {\n       const loadInitialData = () => {\n           if (!authLoading && userId && !hasFetched) {\n               setIsPageLoading(true);\n               try {\n                   const loadedMaterials = loadUserData<StudyMaterial[]>(userId, MATERIALS_SUFFIX) || [];\n                   setMaterials(loadedMaterials.map(m => parseItemDates(m, ['uploadDate'])));\n\n                   const loadedNotesArray = loadUserData<Note[]>(userId, NOTES_SUFFIX) || [];\n                   const notesRecord: Record<string, Note> = {};\n                   loadedNotesArray.forEach(note => {\n                       notesRecord[note.id] = parseItemDates(note, ['createdAt', 'updatedAt']);\n                   });\n                   setNotes(notesRecord);\n                   setHasFetched(true);\n               } catch (error) {\n                   console.error(\"Error loading data:\", error);\n                   toast({ title: \"Error Loading Data\", variant: \"destructive\" });\n               } finally {\n                   setIsPageLoading(false);\n               }\n           } else if (!authLoading && !userId) {\n               setMaterials([]); setNotes({}); setHasFetched(false); setIsPageLoading(false);\n           } else if (hasFetched) {\n               setIsPageLoading(false);\n           }\n       };\n       loadInitialData();\n   }, [userId, authLoading, hasFetched, toast]);\n\n   const saveNotesToStorage = useCallback((updatedNotes: Record<string, Note>) => {\n        if (!userId) return;\n        // Convert Dates to ISO strings for storage\n        const notesToSave = Object.values(updatedNotes).map(note => ({\n            ...note,\n            createdAt: new Date(note.createdAt).toISOString(),\n            updatedAt: new Date(note.updatedAt).toISOString(),\n        }));\n        saveUserData(userId, NOTES_SUFFIX, notesToSave);\n        setNotes(updatedNotes); // Keep Date objects in state\n   }, [userId]);\n\n\n   const handleSelectItem = useCallback((itemId: string | null) => {\n        if (itemId === selectedItemId && !isEditing) return; // Prevent re-selection unless exiting edit mode\n\n        if (isEditing && selectedItemId && notes[selectedItemId]?.content !== currentNoteContentForEdit) {\n            // Basic confirmation if content changed\n            if (confirm(\"You have unsaved changes. Are you sure you want to switch? Changes will be lost.\")) {\n                setIsEditing(false); // Discard changes by exiting edit mode\n            } else {\n                return; // Don't switch\n            }\n        }\n\n       setSelectedItemId(itemId);\n       setCustomInstructions('');\n       setIsEditing(false); // Always exit edit mode when selecting a new item\n\n       const selectedNote = itemId ? notes[itemId] : null;\n       setCurrentNoteContentForEdit(selectedNote?.content || ''); // Load content for potential editing\n   }, [selectedItemId, isEditing, notes, currentNoteContentForEdit]);\n\n\n  const handleGenerateNotes = useCallback(async () => {\n    if (!selectedItemId || isGenerating[selectedItemId] || !userId) return;\n    const selectedMaterial = materials.find(m => m.id === selectedItemId);\n    if (!selectedMaterial?.dataUri?.startsWith('data:application/pdf;base64,')) {\n      toast({ title: \"Invalid PDF\", variant: \"destructive\" }); return;\n    }\n    setIsGenerating(prev => ({ ...prev, [selectedItemId]: true }));\n    toast({ title: \"Generating Notes...\" });\n    try {\n      const input: GenerateNotesInput = { pdfDataUri: selectedMaterial.dataUri, instructions: customInstructions || undefined };\n      const generatedNoteData = await generateNotesFromPdf(input);\n      if (generatedNoteData?.content) {\n           const now = new Date();\n           const newNoteId = `note_${Date.now()}_gen_${Math.random().toString(16).slice(2)}`;\n           const newNote: Note = {\n              id: newNoteId, name: `Notes for ${selectedMaterial.name}`,\n              content: generatedNoteData.content, tags: generatedNoteData.tags, category: generatedNoteData.category,\n              createdAt: now, updatedAt: now, userId, materialId: selectedMaterial.id,\n           };\n           const updatedNotes = { ...notes, [newNote.id]: newNote };\n           saveNotesToStorage(updatedNotes);\n           toast({ title: \"Notes Generated & Saved\" });\n           setSelectedItemId(newNote.id); setCurrentNoteContentForEdit(newNote.content); setIsEditing(false);\n      } else throw new Error(\"AI returned invalid data.\");\n    } catch (error: any) {\n      toast({ title: \"Generation Failed\", description: error.message, variant: \"destructive\" });\n    } finally {\n       setIsGenerating(prev => ({ ...prev, [selectedItemId]: false }));\n    }\n  }, [userId, selectedItemId, isGenerating, materials, customInstructions, toast, notes, saveNotesToStorage]);\n\n   const handleCustomInstructionsChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => setCustomInstructions(e.target.value), []);\n   const handleSearchChange = (event: ChangeEvent<HTMLInputElement>) => setSearchTerm(event.target.value.toLowerCase());\n\n    const handleSummarySaved = useCallback((newNoteData: NoteData) => {\n        if (!userId) return;\n        setIsSaving(true);\n        try {\n             const now = new Date();\n             const newNoteId = `note_${Date.now()}_summary_${Math.random().toString(16).slice(2)}`;\n             const newNote: Note = {\n                 id: newNoteId, name: `Summary: ${newNoteData.category || 'Untitled'}`,\n                 content: newNoteData.content, tags: newNoteData.tags, category: newNoteData.category,\n                 createdAt: now, updatedAt: now, userId, materialId: null,\n            };\n            const updatedNotes = { ...notes, [newNote.id]: newNote };\n            saveNotesToStorage(updatedNotes);\n            toast({ title: \"Summary Saved\" });\n            setSelectedItemId(newNote.id); setCurrentNoteContentForEdit(newNote.content); setIsEditing(false);\n        } finally { setIsSaving(false); }\n    }, [userId, toast, notes, saveNotesToStorage]);\n\n    const handleNoteContentChange = useCallback((newContent: string) => {\n       if (!isEditing) return; // Only allow changes in edit mode\n       setCurrentNoteContentForEdit(newContent);\n    }, [isEditing]);\n\n     const handleCreateNewNote = () => {\n        if (!newNoteName.trim() || !userId) { toast({ title: \"Name Required\", variant: \"destructive\" }); return; }\n        setIsSaving(true);\n        try {\n            const now = new Date();\n            const newNoteId = `note_${Date.now()}_manual_${Math.random().toString(16).slice(2)}`;\n            const initialContent = `# ${newNoteName.trim()}\\n\\nStart writing here...`;\n            const newNote: Note = {\n                id: newNoteId, name: newNoteName.trim(), content: initialContent,\n                tags: ['manual'], category: 'Uncategorized', createdAt: now, updatedAt: now, userId, materialId: null,\n            };\n            const updatedNotes = { ...notes, [newNote.id]: newNote };\n            saveNotesToStorage(updatedNotes);\n            toast({ title: \"Note Created\" });\n            setNewNoteName(''); setSelectedItemId(newNote.id); setCurrentNoteContentForEdit(initialContent); setIsEditing(true);\n        } finally { setIsSaving(false); }\n     };\n\n    const handleSaveNote = () => {\n        if (!isEditing || !selectedItemId || !userId) return;\n        const noteToSave = notes[selectedItemId];\n        if (!noteToSave || noteToSave.content === currentNoteContentForEdit) { setIsEditing(false); return; }\n        setIsSaving(true);\n        try {\n             const updatedNote = { ...noteToSave, content: currentNoteContentForEdit, updatedAt: new Date() };\n             const updatedNotes = { ...notes, [selectedItemId]: updatedNote };\n             saveNotesToStorage(updatedNotes);\n             setIsEditing(false); toast({title: \"Note Saved\"});\n        } finally { setIsSaving(false); }\n    };\n\n     const handleDeleteNote = useCallback(() => {\n         if (!selectedItemId || !userId || isEditing) {\n             if(isEditing) toast({title: \"Save or Cancel Edit\", description: \"Please save or cancel your current edits before deleting.\", variant: \"default\"});\n             return;\n         }\n         const noteToDelete = notes[selectedItemId];\n         if (!noteToDelete) return;\n         if (!confirm(`Are you sure you want to delete \"${noteToDelete.name || 'this note'}\"? This cannot be undone.`)) return;\n         setIsSaving(true);\n         try {\n             const updatedNotes = { ...notes };\n             delete updatedNotes[selectedItemId];\n             saveNotesToStorage(updatedNotes);\n             setSelectedItemId(null); setCurrentNoteContentForEdit('');\n             toast({ title: \"Note Deleted\" });\n         } finally { setIsSaving(false); }\n     }, [selectedItemId, userId, notes, isEditing, toast, saveNotesToStorage]);\n\n    const handleToggleEdit = () => {\n         if (isEditing) {\n             handleSaveNote(); // This will also set isEditing to false\n         } else if (selectedItemId && notes[selectedItemId]) {\n              setCurrentNoteContentForEdit(notes[selectedItemId].content); // Ensure editor has latest saved content\n              setIsEditing(true);\n         } else {\n              toast({title: \"Cannot Edit\", description: \"Select or create a note to edit.\"})\n         }\n    };\n\n    const combinedSelectOptions = useMemo(() => {\n        const materialOptions: SelectOption[] = materials\n            .filter(m => !searchTerm || m.name.toLowerCase().includes(searchTerm) || (m.tags || []).join(' ').toLowerCase().includes(searchTerm))\n            .map(m => ({ id: m.id, name: m.name, type: 'material', isImported: m.isImported, dataUri: m.dataUri }));\n        const noteOptions: SelectOption[] = Object.values(notes)\n             .filter(n => !searchTerm || (n.name||'').toLowerCase().includes(searchTerm) || n.content.toLowerCase().includes(searchTerm) || (n.category||'').toLowerCase().includes(searchTerm) || (n.tags||[]).join(' ').toLowerCase().includes(searchTerm))\n             .map(n => ({ id: n.id, name: n.name || `${n.category}: ${n.content.substring(0,30)}...`, type: 'note' }));\n        return [...materialOptions, ...noteOptions].sort((a,b)=> a.name.localeCompare(b.name));\n    }, [materials, notes, searchTerm]);\n\n   const displayNoteData = selectedItemId ? notes[selectedItemId] : null;\n   const selectedItem = combinedSelectOptions.find(opt => opt.id === selectedItemId);\n   const selectedItemName = selectedItem?.name || 'Select an item...';\n   const isGeneratingCurrent = selectedItemId ? isGenerating[selectedItemId] : false;\n   const isSelectedMaterialValidForGen = selectedItem?.type === 'material' && !selectedItem.isImported && !!selectedItem.dataUri;\n   const isNoteSelected = selectedItem?.type === 'note';\n\n   if (authLoading || isPageLoading) return (<div className=\"flex justify-center items-center h-[calc(100vh-8rem)]\"><Loader2 className=\"animate-spin text-primary\" /><span className=\"ml-2\">Loading...</span></div>);\n   if (!userId) return (<div className=\"p-4 text-center\">Please log in.</div>);\n\n  return (\n    <div className=\"panel-slide-fade-in h-[calc(100vh-8rem)] flex flex-col gap-8\">\n      <h1 className=\"text-3xl font-bold text-primary\">Notes & Summaries</h1>\n       <Alert variant=\"default\" className=\"border-primary/50 bg-primary/10\"><Info /><AlertTitle>Data Storage</AlertTitle><AlertDescription>Notes & PDFs saved in browser localStorage.</AlertDescription></Alert>\n        <div className=\"relative\">\n            <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n            <Input placeholder=\"Search materials & notes...\" value={searchTerm} onChange={handleSearchChange} className=\"pl-10\" disabled={isSaving || isGeneratingCurrent} />\n        </div>\n       <Tabs defaultValue=\"viewer\" className=\"flex-1 flex flex-col gap-8\">\n          <TabsList className=\"grid w-full grid-cols-3\">\n              <TabsTrigger value=\"viewer\">Note Viewer / Editor</TabsTrigger>\n              <TabsTrigger value=\"generator\">PDF Note Generator</TabsTrigger>\n              <TabsTrigger value=\"summarizer\">Text Summarizer</TabsTrigger>\n          </TabsList>\n            <TabsContent value=\"viewer\" className=\"flex-1 flex flex-col gap-8 mt-0\">\n                 <Card className=\"glassmorphism\">\n                     <CardHeader><CardTitle className=\"text-xl text-primary\">Select or Create Note</CardTitle></CardHeader>\n                     <CardContent className=\"space-y-4\">\n                         <Select value={selectedItemId ?? \"\"} onValueChange={handleSelectItem} disabled={isSaving || isGeneratingCurrent}>\n                             <SelectTrigger><SelectValue placeholder=\"Select material or note...\" /></SelectTrigger>\n                             <SelectContent>\n                                 {combinedSelectOptions.length === 0 ? <div className=\"p-2 text-center text-sm\">{searchTerm ? 'No matches.' : 'No items.'}</div>\n                                   : combinedSelectOptions.map(item => (<SelectItem key={item.id} value={item.id}>{item.name} {item.type === 'material' ? '(PDF)' : '(Note)'}</SelectItem>))}\n                             </SelectContent>\n                         </Select>\n                         <div className=\"flex flex-col sm:flex-row gap-2\">\n                              <Input placeholder=\"New note name...\" value={newNoteName} onChange={e => setNewNoteName(e.target.value)} disabled={isSaving} />\n                             <Button onClick={handleCreateNewNote} disabled={!newNoteName.trim() || isSaving} className=\"hover-glow\">\n                                {isSaving ? <Loader2 className=\"animate-spin mr-2\"/> : <FileText className=\"mr-2\" />} Create Note\n                              </Button>\n                         </div>\n                     </CardContent>\n                 </Card>\n                 <Card className=\"glassmorphism flex-1 flex flex-col overflow-hidden\">\n                     <CardHeader>\n                         <CardTitle className=\"text-xl text-primary flex items-center justify-between\">\n                             <span className=\"truncate\">{selectedItemName}</span>\n                             {isNoteSelected && (\n                                <div className=\"flex gap-2\">\n                                     <Button variant={isEditing ? \"default\" : \"outline\"} size=\"sm\" onClick={handleToggleEdit} className=\"hover-glow\" disabled={isSaving || !selectedItemId}>\n                                        {isEditing ? <Save className=\"mr-1\" /> : <Edit className=\"mr-1\" />} {isEditing ? (isSaving ? 'Saving...' : 'Save') : 'Edit'}\n                                     </Button>\n                                     <Button variant=\"destructive\" size=\"sm\" onClick={handleDeleteNote} className=\"hover-glow\" disabled={isSaving || isEditing || !selectedItemId}>\n                                        {isSaving && selectedItemId === notes[selectedItemId!]?.id ? <Loader2 className=\"animate-spin\"/> : <Trash2 />}\n                                     </Button>\n                                </div> )}\n                         </CardTitle>\n                     </CardHeader>\n                     <CardContent className=\"flex-1 overflow-hidden p-0\">\n                         <ScrollArea className=\"h-full p-6\">\n                             <GeneratedNotesDisplay noteData={displayNoteData} isLoading={isSaving} itemName={selectedItemName} onContentChange={handleNoteContentChange} isEditing={isEditing} />\n                         </ScrollArea>\n                     </CardContent>\n                 </Card>\n            </TabsContent>\n           <TabsContent value=\"generator\" className=\"flex-1 flex flex-col gap-8 mt-0\">\n              <Card className=\"glassmorphism\">\n                <CardHeader><CardTitle className=\"text-xl text-primary\">Generate Notes from PDF</CardTitle></CardHeader>\n                <CardContent className=\"space-y-4\">\n                   {materials.filter(m => !m.isImported).length === 0 ? (\n                         <div className=\"text-muted-foreground flex items-center gap-2\">No PDFs. <Link href=\"/materials\" passHref legacyBehavior><Button variant=\"outline\" size=\"sm\"><Upload /> Upload</Button></Link></div>\n                    ) : combinedSelectOptions.filter(opt => opt.type === 'material' && !opt.isImported && opt.dataUri).length === 0 && searchTerm ? (\n                         <p>No PDF materials match search.</p>\n                    ) : (\n                        <Select value={selectedItemId ?? \"\"} onValueChange={handleSelectItem} disabled={isGeneratingCurrent || isSaving}>\n                            <SelectTrigger><SelectValue placeholder=\"Select uploaded PDF...\" /></SelectTrigger>\n                            <SelectContent>\n                                {combinedSelectOptions.filter(opt => opt.type === 'material' && !opt.isImported && opt.dataUri).map(item => (<SelectItem key={item.id} value={item.id}>{item.name}</SelectItem>))}\n                            </SelectContent>\n                        </Select>)}\n                   <Textarea placeholder=\"Optional: Custom instructions for AI...\" value={customInstructions} onChange={handleCustomInstructionsChange} disabled={!isSelectedMaterialValidForGen || isGeneratingCurrent || isSaving} />\n                </CardContent>\n                <CardFooter>\n                   <Button onClick={handleGenerateNotes} disabled={!isSelectedMaterialValidForGen || isGeneratingCurrent || isSaving} className=\"hover-glow\">\n                     {isGeneratingCurrent ? <Loader2 className=\"animate-spin mr-2\" /> : <Wand2 className=\"mr-2\" />} Generate\n                   </Button>\n                </CardFooter>\n              </Card>\n           </TabsContent>\n            <TabsContent value=\"summarizer\" className=\"flex-1 flex flex-col gap-8 mt-0\">\n                 <SummarizeWidget className=\"glassmorphism w-full\" onSummaryGenerated={handleSummarySaved} />\n           </TabsContent>\n       </Tabs>\n    </div>\n  );\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7966, "column": 0}, "map": {"version":3,"sources":["file:///Users/tanishqbedi/Documents/Projects/kageyama/lifeos/src/app/assistant/page.tsx"],"sourcesContent":["\n'use client';\n\nimport React, { useState, useRef, useEffect, FormEvent, useCallback, memo } from 'react'; // Added memo, useCallback\nimport { Card, CardHeader, CardTitle, CardContent, CardFooter } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Avatar, AvatarFallback } from \"@/components/ui/avatar\"; // Removed AvatarImage as it wasn't used\nimport { Send, Loader2, Key, Bot as BotIcon, User, AlertTriangle } from 'lucide-react'; // Renamed Bot to BotIcon, added User, AlertTriangle\nimport { answerQuestion, type AnswerQuestionInput, type AnswerQuestionOutput } from '@/ai/flows/answer-question';\nimport { generateGeminiKey, type GenerateGeminiKeyInput, type GenerateGeminiKeyOutput } from '@/ai/flows/generate-gemini-key';\nimport { useToast } from \"@/hooks/use-toast\";\n\n\ninterface Message {\n  id: string;\n  role: 'user' | 'assistant' | 'tool';\n  content: string;\n  isError?: boolean; // Flag for error messages\n}\n\n// Memoized Message Bubble Component\nconst MessageBubble = memo(({ message }: { message: Message }) => {\n    // Helper to render message content with potential markdown/code formatting\n    const renderMessageContent = useCallback((content: string) => {\n        // Basic markdown for bold and code blocks\n        let htmlContent = content.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>'); // Bold\n        htmlContent = htmlContent.replace(/`(.*?)`/g, '<code class=\"bg-muted px-1 py-0.5 rounded text-sm\">$1</code>'); // Inline code\n        // Handle newlines\n        htmlContent = htmlContent.replace(/\\n/g, '<br />');\n        return <div dangerouslySetInnerHTML={{ __html: htmlContent }} />;\n    }, []); // No dependencies, safe to memoize\n\n    const isUser = message.role === 'user';\n\n    return (\n        <div\n            className={`flex items-start gap-4 ${isUser ? 'justify-end' : ''}`}\n        >\n            {!isUser && (\n                <Avatar className={`w-8 h-8 border ${message.isError ? 'border-destructive' : 'border-primary'}`}>\n                    <AvatarFallback className={`${message.isError ? 'bg-destructive text-destructive-foreground' : 'bg-primary text-primary-foreground'}`}>\n                        {message.isError ? <AlertTriangle className=\"w-4 h-4\" /> : message.role === 'assistant' ? <BotIcon className=\"w-4 h-4\" /> : <Key className=\"w-4 h-4\" />}\n                    </AvatarFallback>\n                </Avatar>\n            )}\n            <div\n                className={`p-3 rounded-lg max-w-[75%] shadow-md ${ // Added shadow\n                    isUser\n                    ? 'bg-primary text-primary-foreground'\n                    : message.isError ? 'bg-destructive/10 text-destructive' : 'bg-secondary text-secondary-foreground'\n                }`}\n            >\n                {renderMessageContent(message.content)}\n            </div>\n            {isUser && (\n                <Avatar className=\"w-8 h-8 border border-muted\">\n                    <AvatarFallback><User className=\"w-4 h-4\" /></AvatarFallback>\n                </Avatar>\n            )}\n        </div>\n    );\n});\nMessageBubble.displayName = 'MessageBubble'; // Add display name\n\nexport default function AssistantPage() {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const { toast } = useToast();\n  const scrollAreaRef = useRef<HTMLDivElement>(null);\n  const viewportRef = useRef<HTMLDivElement>(null); // Ref for the viewport element\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  // Get viewport element reference for scrolling\n  useEffect(() => {\n    if (scrollAreaRef.current) {\n        // Shadcn ScrollArea viewport has data attribute data-radix-scroll-area-viewport\n        const viewportElement = scrollAreaRef.current.querySelector('[data-radix-scroll-area-viewport]');\n        if (viewportElement) {\n            viewportRef.current = viewportElement as HTMLDivElement;\n        }\n    }\n  }, []);\n\n  // Scroll to bottom when messages update\n  useEffect(() => {\n    if (viewportRef.current) {\n      viewportRef.current.scrollTop = viewportRef.current.scrollHeight;\n    }\n    // Focus input after message update or loading stops\n    if (!isLoading && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [messages, isLoading]);\n\n\n   // Check if the user message indicates a request for a Gemini key\n  const requiresGeminiKey = useCallback((text: string): boolean => {\n    const keywords = ['gemini key', 'api key', 'generate key', 'need a key', 'create key'];\n    const lowerText = text.toLowerCase();\n    return keywords.some(keyword => lowerText.includes(keyword));\n  }, []); // No dependencies\n\n  const handleSendMessage = useCallback(async (e?: FormEvent) => { // Make event optional for potential programmatic send\n    if (e) e.preventDefault();\n    const currentInput = input.trim();\n    if (!currentInput || isLoading) return;\n\n    const userMessage: Message = { id: Date.now().toString(), role: 'user', content: currentInput };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setIsLoading(true);\n\n    try {\n      let assistantResponse: Message;\n\n      if (requiresGeminiKey(userMessage.content)) {\n        const toolInput: GenerateGeminiKeyInput = { userDescription: userMessage.content };\n        \n        // Add a message indicating key generation is in progress\n        const generatingMessageId = (Date.now() + 1).toString();\n        const generatingMessage: Message = { \n            id: generatingMessageId, \n            role: 'tool', \n            content: 'Generating Gemini API Key...' \n        };\n        setMessages(prev => [...prev, generatingMessage]);\n\n        const result: GenerateGeminiKeyOutput = await generateGeminiKey(toolInput);\n\n        // Replace the \"generating\" message with the actual result\n        const toolResultMessageContent = `Okay, I've \"generated\" a Gemini API key for you (this is a simulation):\\n\\n**API Key:** \\`${result.geminiApiKey}\\`\\n\\n**Instructions:**\\n${result.instructions}\\n\\n**Important:** This is a FAKE key for demonstration purposes and will not work with actual Google AI services. To use real AI features, you need a valid Google AI API key set in your .env file.`;\n        const toolResultMessage: Message = {\n            id: generatingMessageId, \n            role: 'assistant', // Display as an assistant message\n            content: toolResultMessageContent\n        };\n         setMessages(prev => prev.map(msg => msg.id === generatingMessageId ? toolResultMessage : msg));\n\n         toast({\n            title: \"Simulated Gemini Key Generated\",\n            description: \"The API key and instructions are in the chat. Remember, this is a FAKE key.\",\n          });\n\n      } else {\n        const aiInput: AnswerQuestionInput = { question: userMessage.content };\n        // Add placeholder immediately\n        const placeholderMessageId = (Date.now() + 1).toString();\n        const placeholderMessage: Message = { id: placeholderMessageId, role: 'assistant', content: '...' };\n        setMessages(prev => [...prev, placeholderMessage]);\n\n        const result: AnswerQuestionOutput = await answerQuestion(aiInput);\n\n        assistantResponse = {\n             id: placeholderMessageId, // Use same ID to replace\n             role: 'assistant',\n             content: result.answer || 'Sorry, I could not get an answer.' // Handle empty answer\n         };\n         setMessages(prev => prev.map(msg => msg.id === placeholderMessageId ? assistantResponse : msg));\n      }\n\n    } catch (error) {\n      console.error(\"AI Flow Error:\", error);\n      const errorResponseMessageId = (Date.now() + Date.now().toString().slice(-3)).toString(); \n      let errorMessageContent = `Sorry, I encountered an error processing your request.`;\n      let toastDescription = \"Failed to get response from AI.\";\n      let isApiKeyError = false;\n\n      if (error instanceof Error) {\n          errorMessageContent += ` Details: ${error.message}`;\n          if (error.message.toLowerCase().includes(\"api key not valid\") || error.message.toLowerCase().includes(\"api_key_invalid\")) {\n            isApiKeyError = true;\n            errorMessageContent = \"It seems there's an issue with the AI API key. Please ensure a valid `GOOGLE_GENAI_API_KEY` is set in your project's `.env` file and that the key has access to the Gemini models. You can obtain a key from Google AI Studio.\";\n            toastDescription = \"Invalid or missing AI API Key. Check your .env file.\";\n          }\n      }\n      \n      const errorMessageUi: Message = {\n        id: errorResponseMessageId,\n        role: 'assistant',\n        content: errorMessageContent,\n        isError: true, // Mark as an error message for styling\n      };\n      \n       setMessages(prev => {\n            const lastMessage = prev[prev.length -1];\n            // If the last message was a placeholder or tool message, replace it with the error.\n            if(lastMessage && (lastMessage.role === 'assistant' || lastMessage.role === 'tool') && (lastMessage.content === '...' || lastMessage.content.includes('Generating'))) {\n                return prev.map((msg, index) => index === prev.length - 1 ? {...errorMessageUi, id: lastMessage.id } : msg);\n            }\n            // Otherwise, add the new error message.\n            return [...prev, errorMessageUi];\n       });\n\n       toast({\n        title: isApiKeyError ? \"API Key Error\" : \"Error\",\n        description: toastDescription,\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  }, [input, isLoading, requiresGeminiKey, toast]); // Dependencies\n\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n     setInput(e.target.value);\n  }, []); // No dependencies\n\n  return (\n    <div className=\"panel-slide-fade-in h-[calc(100vh-8rem)] flex flex-col\">\n      <h1 className=\"text-3xl font-bold mb-8 text-primary\">AI Assistant</h1>\n      <Card className=\"glassmorphism flex-1 flex flex-col overflow-hidden\">\n        <CardHeader className=\"border-b border-border/50\">\n          <CardTitle className=\"text-lg text-primary\">Chat</CardTitle>\n        </CardHeader>\n        <CardContent className=\"flex-1 overflow-hidden p-0\">\n          <ScrollArea className=\"h-full p-6\" ref={scrollAreaRef}>\n            <div className=\"space-y-6\">\n              {messages.map((message) => (\n                 <MessageBubble key={message.id} message={message} />\n              ))}\n               {isLoading && messages.length > 0 && messages[messages.length -1]?.content === '...' && (\n                <div className=\"flex items-start gap-4\">\n                  <Avatar className=\"w-8 h-8 border border-primary\">\n                    <AvatarFallback className=\"bg-primary text-primary-foreground\"><BotIcon className=\"w-4 h-4\" /></AvatarFallback>\n                  </Avatar>\n                  <div className=\"p-3 rounded-lg bg-secondary text-secondary-foreground\">\n                    <Loader2 className=\"w-5 h-5 animate-spin\" />\n                  </div>\n                </div>\n              )}\n            </div>\n          </ScrollArea>\n        </CardContent>\n        <CardFooter className=\"border-t border-border/50 p-4\">\n          <form onSubmit={handleSendMessage} className=\"flex w-full gap-4\">\n            <Input\n              ref={inputRef}\n              value={input}\n              onChange={handleInputChange}\n              placeholder=\"Ask anything or type 'generate gemini key'...\"\n              className=\"flex-1 text-base\"\n              disabled={isLoading}\n              aria-label=\"Chat input\"\n            />\n            <Button type=\"submit\" disabled={isLoading || !input.trim()} className=\"hover-glow\">\n              {isLoading ? <Loader2 className=\"w-4 h-4 animate-spin\" /> : <Send className=\"w-4 h-4\" />}\n              <span className=\"sr-only\">Send</span>\n            </Button>\n          </form>\n        </CardFooter>\n      </Card>\n    </div>\n  );\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 8437, "column": 0}, "map": {"version":3,"sources":["file:///Users/tanishqbedi/Documents/Projects/kageyama/lifeos/src/app/login/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, FormEvent, useEffect } from 'react';\nimport { useAuth } from '@/hooks/use-auth'; // Ensure this uses MongoDB version\nimport { useToast } from '@/hooks/use-toast';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport Link from 'next/link';\nimport { Loader2 } from 'lucide-react';\nimport { useRouter } from 'next/navigation';\n\nconst APP_ROUTES = [\n  '/dashboard',\n  '/materials',\n  '/goals',\n  '/tasks',\n  '/habits',\n  '/timer',\n  '/flashcards',\n  '/notes',\n  '/assistant',\n];\n\nexport default function LoginPage() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const { signIn, loading: authLoading, user } = useAuth();\n  const { toast } = useToast();\n  const router = useRouter();\n\n  useEffect(() => {\n    // If user is already logged in (checked by useAuth from MongoDB), redirect to dashboard\n    if (user && !authLoading) {\n      console.log('LoginPage: User detected, redirecting to /');\n      router.replace('/'); // Use replace to prevent login page from being in history\n    }\n  }, [user, authLoading, router]);\n\n  // Prefetch routes when component mounts and user is not logged in\n  useEffect(() => {\n    if (!user && !authLoading) {\n      APP_ROUTES.forEach(route => {\n        router.prefetch(route);\n      });\n      console.log('LoginPage: Prefetching application routes.');\n    }\n  }, [user, authLoading, router]);\n\n\n  const handleLogin = async (e: FormEvent) => {\n    e.preventDefault();\n    if (!email || !password) {\n        toast({ title: \"Missing Fields\", description: \"Please enter both email and password.\", variant: \"destructive\" });\n        return;\n    }\n    // signIn function from useAuth handles API call, loading state, toasts.\n    // Redirection is handled by useEffect above reacting to user state change, or by AuthProvider's logic.\n    await signIn(email, password);\n  };\n\n  // Show loading spinner if auth is in progress (e.g., during initial session check or sign-in attempt)\n  // AND the user is not yet determined. This is primarily handled by AuthProvider for initial load.\n  // This loader is more for the sign-in process itself.\n  if (authLoading && !user) { // Only show this specific loader if actively trying to sign in/up or initial load\n     return (\n       <div className=\"flex justify-center items-center h-screen w-screen bg-background\">\n         <Loader2 className=\"w-12 h-12 animate-spin text-primary\" />\n         <span className=\"ml-3 text-muted-foreground\">Checking credentials...</span>\n       </div>\n     );\n   }\n\n  return (\n    <div className=\"flex items-center justify-center min-h-screen bg-gradient-to-br from-background to-background\">\n      <Card className=\"w-full max-w-md glassmorphism\">\n        <CardHeader className=\"text-center\">\n          <CardTitle className=\"text-2xl font-bold text-primary\">Welcome Back!</CardTitle>\n          <CardDescription>Log in to your LifeOS account.</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <form onSubmit={handleLogin} className=\"space-y-4\">\n          <div className=\"space-y-2\">\n              <Label htmlFor=\"email\">Email</Label>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                placeholder=\"you@example.com\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n                disabled={authLoading}\n              />\n            </div>\n            <div className=\"space-y-2\">\n            <Label htmlFor=\"password\">Password</Label>\n              <Input\n                id=\"password\"\n                type=\"password\"\n                placeholder=\"********\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                required\n                disabled={authLoading}\n              />\n            </div>\n            <Button type=\"submit\" className=\"w-full hover-glow\" disabled={authLoading}>\n              {authLoading ? <Loader2 className=\"animate-spin mr-2\" /> : null}\n              {authLoading ? 'Logging In...' : 'Log In'}\n            </Button>\n          </form>\n        </CardContent>\n        <CardFooter className=\"text-center text-sm text-muted-foreground\">\n          Don't have an account?{' '}\n          <Link href=\"/signup\" className=\"text-primary hover:underline\">\n            Sign Up\n          </Link>\n        </CardFooter>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 8709, "column": 0}, "map": {"version":3,"sources":["file:///Users/tanishqbedi/Documents/Projects/kageyama/lifeos/src/app/signup/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, FormEvent, useEffect } from 'react';\nimport { useAuth } from '@/hooks/use-auth'; // Uses MongoDB version\nimport { useToast } from '@/hooks/use-toast';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport Link from 'next/link';\nimport { Loader2 } from 'lucide-react';\nimport { useRouter } from 'next/navigation';\n\nconst APP_ROUTES = [\n  '/dashboard',\n  '/materials',\n  '/goals',\n  '/tasks',\n  '/habits',\n  '/timer',\n  '/flashcards',\n  '/notes',\n  '/assistant',\n];\n\nexport default function SignUpPage() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const { signUp, loading: authLoading, user } = useAuth();\n  const { toast } = useToast();\n  const router = useRouter();\n\n  useEffect(() => {\n    // If user is already logged in (checked by useAuth from MongoDB), redirect to dashboard\n    if (user && !authLoading) {\n      console.log('SignUpPage: User detected, redirecting to /');\n      router.replace('/'); // Use replace to prevent signup page from being in history\n    }\n  }, [user, authLoading, router]);\n\n  // Prefetch routes when component mounts and user is not logged in\n  useEffect(() => {\n    if (!user && !authLoading) {\n      APP_ROUTES.forEach(route => {\n        router.prefetch(route);\n      });\n      console.log('SignUpPage: Prefetching application routes.');\n    }\n  }, [user, authLoading, router]);\n\n\n  const handleSignUp = async (e: FormEvent) => {\n    e.preventDefault();\n    if (!email || !password || !confirmPassword) {\n        toast({ title: \"Missing Fields\", description: \"Please fill in all fields.\", variant: \"destructive\" });\n        return;\n    }\n    if (password !== confirmPassword) {\n      toast({ title: \"Passwords Don't Match\", description: \"Please ensure passwords match.\", variant: \"destructive\" });\n      return;\n    }\n    if (password.length < 6) {\n      toast({ title: \"Password Too Short\", description: \"Password must be at least 6 characters.\", variant: \"destructive\" });\n      return;\n    }\n    // signUp function from useAuth handles API call, loading state, toasts.\n    // Redirection is handled by useEffect above reacting to user state change, or by AuthProvider's logic.\n    await signUp(email, password);\n  };\n\n  if (authLoading && !user) { // Show loader only if not yet authenticated and auth is in progress\n    return (\n      <div className=\"flex justify-center items-center h-screen w-screen bg-background\">\n        <Loader2 className=\"w-12 h-12 animate-spin text-primary\" />\n         <span className=\"ml-3 text-muted-foreground\">Setting up your account...</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex items-center justify-center min-h-screen bg-gradient-to-br from-background to-background\">\n      <Card className=\"w-full max-w-md glassmorphism\">\n        <CardHeader className=\"text-center\">\n          <CardTitle className=\"text-2xl font-bold text-primary\">Create Account</CardTitle>\n          <CardDescription>Join LifeOS with a MongoDB backed account.</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <form onSubmit={handleSignUp} className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"email\">Email</Label>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                placeholder=\"you@example.com\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n                disabled={authLoading}\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"password\">Password</Label>\n              <Input\n                id=\"password\"\n                type=\"password\"\n                placeholder=\"********\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                required\n                minLength={6}\n                aria-describedby=\"password-description\"\n                disabled={authLoading}\n              />\n               <p id=\"password-description\" className=\"text-xs text-muted-foreground\">Use at least 6 characters.</p>\n            </div>\n             <div className=\"space-y-2\">\n              <Label htmlFor=\"confirm-password\">Confirm Password</Label>\n              <Input\n                id=\"confirm-password\"\n                type=\"password\"\n                placeholder=\"********\"\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n                required\n                minLength={6}\n                disabled={authLoading}\n              />\n            </div>\n            <Button type=\"submit\" className=\"w-full hover-glow\" disabled={authLoading}>\n              {authLoading ? <Loader2 className=\"animate-spin mr-2\" /> : null}\n              {authLoading ? 'Signing Up...' : 'Sign Up'}\n            </Button>\n          </form>\n        </CardContent>\n        <CardFooter className=\"text-center text-sm text-muted-foreground\">\n          Already have an account?{' '}\n          <Link href=\"/login\" className=\"text-primary hover:underline\">\n            Log In\n          </Link>\n        </CardFooter>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 9037, "column": 0}, "map": {"version":3,"sources":["file:///Users/tanishqbedi/Documents/Projects/kageyama/lifeos/src/app/layout.tsx"],"sourcesContent":["'use client'; // Top-level layout now needs to be client due to hooks\n\nimport React, { useMemo, useCallback, useEffect } from 'react'; // Added useEffect\nimport './globals.css';\nimport {\n  SidebarProvider,\n  Sidebar,\n  SidebarHeader,\n  SidebarContent,\n  SidebarMenu,\n  SidebarMenuItem,\n  SidebarMenuButton,\n  SidebarInset,\n  SidebarFooter, // Import SidebarFooter\n  useSidebar,\n} from '@/components/ui/sidebar';\nimport {\n  LayoutDashboard,\n  CreditCard,\n  Bot,\n  FileText,\n  Upload,\n  ListChecks, // Added icons\n  Activity,\n  Clock,\n  Target,\n  LogOut, // Added Logout icon\n} from 'lucide-react';\nimport Link from 'next/link';\nimport { Toaster } from '@/components/ui/toaster';\nimport { Logo } from '@/components/ui/logo';\nimport { usePathname, useRouter } from 'next/navigation'; // Import usePathname and useRouter\nimport { cn } from '@/lib/utils';\nimport { ThemeProvider } from \"@/components/providers/theme-provider\";\nimport { ThemeToggleButton } from \"@/components/theme-toggle-button\";\nimport { AuthProvider, useAuth } from '@/hooks/use-auth'; // Import AuthProvider and useAuth\nimport { Button } from '@/components/ui/button';\nimport { Loader2 } from 'lucide-react'; // Import Loader\n\nimport Dashboard from './dashboard/page';\nimport Materials from './materials/page';\nimport Goals from './goals/page';\nimport Tasks from './tasks/page';\nimport Habits from './habits/page';\nimport Timer from './timer/page';\nimport Flashcards from './flashcards/page';\nimport Notes from './notes/page';\nimport Assistant from './assistant/page';\nimport Login from './login/page';\nimport Signup from './signup/page';\n\nimport { BrowserRouter, Routes, Route, NavLink } from \"react-router\";\n\nexport default function RootLayout() {\n  return (\n    <html lang=\"en\" suppressHydrationWarning>\n      <body>\n        <AuthProvider>\n          <ThemeProvider\n            attribute=\"class\"\n            defaultTheme=\"system\"\n            enableSystem\n            disableTransitionOnChange\n          >\n            <SidebarProvider defaultOpen={true}>\n              <BrowserRouter>\n                <AppContent />\n              </BrowserRouter>\n            </SidebarProvider>\n            <Toaster />\n          </ThemeProvider>\n        </AuthProvider>\n      </body>\n    </html>\n  );\n}\n\nfunction AppContent() {\n  const { isMobile, setOpenMobile, state: sidebarState } = useSidebar();\n  const { user, signOut, loading: authLoading } = useAuth();\n\n  const menuItems = useMemo(() => [\n    { path: \"/\", label: \"Dashboard\", icon: <LayoutDashboard /> },\n    { path: \"/materials\", label: \"Materials\", icon: <Upload /> },\n    { path: \"/goals\", label: \"Goals\", icon: <Target /> },\n    { path: \"/tasks\", label: \"Tasks\", icon: <ListChecks /> },\n    { path: \"/habits\", label: \"Habits\", icon: <Activity /> },\n    { path: \"/timer\", label: \"Timer\", icon: <Clock /> },\n    { path: \"/flashcards\", label: \"Flashcards\", icon: <CreditCard /> },\n    { path: \"/notes\", label: \"Notes\", icon: <FileText /> },\n    { path: \"/assistant\", label: \"AI Assistant\", icon: <Bot /> },\n  ], []);\n\n  const showSidebar = user && !authLoading;\n\n  return (\n    <div className={cn('flex min-h-screen w-full', 'antialiased font-sans')}>\n      {showSidebar && (\n        <Sidebar\n          variant=\"sidebar\"\n          collapsible=\"icon\"\n          className=\"border-r border-sidebar-border/50\"\n          data-state={sidebarState}\n        >\n          <SidebarHeader>\n            <Logo />\n          </SidebarHeader>\n          <SidebarContent>\n            <SidebarMenu>\n              {menuItems.map((item) => (\n                <SidebarMenuItem key={item.path}>\n                  <NavLink to={item.path}>\n                  <SidebarMenuButton\n                    tooltip={item.label}\n                    className=\"hover-glow\"\n                    onClick={() => isMobile && setOpenMobile(false)}\n                  >\n                    {item.icon}\n                    {/* <NavLink to={item.path}>{item.label}</NavLink> */}\n\n                    <span>{item.label}</span>\n                  </SidebarMenuButton>\n                  </NavLink>\n                </SidebarMenuItem>\n              ))}\n            </SidebarMenu>\n          </SidebarContent>\n          <SidebarFooter className=\"flex items-center justify-between p-4 border-t border-sidebar-border/50\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={signOut}\n              className=\"hover-glow w-full justify-start\"\n              disabled={authLoading}\n            >\n              {authLoading ? (\n                <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n              ) : (\n                <LogOut className=\"w-4 h-4 mr-2\" />\n              )}\n              <span className={cn(sidebarState === 'collapsed' && 'md:hidden')}>Logout</span>\n            </Button>\n            <ThemeToggleButton />\n          </SidebarFooter>\n        </Sidebar>\n      )}\n      <SidebarInset\n        className={cn(\n          \"flex-1 transition-[padding-left] duration-200 ease-linear\",\n          showSidebar && (\n            sidebarState === 'collapsed'\n              ? 'md:pl-[calc(var(--sidebar-width-icon,4rem))]'\n              : 'md:pl-[calc(var(--sidebar-width,16rem))]'\n          ),\n          \"p-4 md:p-8 space-y-8\"\n        )}\n      >\n        This is the dashboard part\n        <Routes>\n          <Route path=\"/\" element={<Dashboard />} />\n          <Route path=\"/materials\" element={<Materials />} />\n          <Route path=\"/goals\" element={<Goals />} />\n          <Route path=\"/tasks\" element={<Tasks />} />\n          <Route path=\"/habits\" element={<Habits />} />\n          <Route path=\"/timer\" element={<Timer />} />\n          <Route path=\"/flashcards\" element={<Flashcards />} />\n          <Route path=\"/notes\" element={<Notes />} />\n          <Route path=\"/assistant\" element={<Assistant />} />\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/signup\" element={<Signup />} />\n          {/* <Route path=\"*\" element={<Navigate to=\"/\" />} /> */}\n        </Routes>\n      </SidebarInset>\n    </div>\n  );\n}\n\n\n    "],"names":[],"mappings":"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","debugId":null}}]
}